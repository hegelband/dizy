function cov_19f7ptg2v5(){var path="D:\\Programming\\xyz\\dizy\\src\\containers\\SimpleContainer.js";var hash="8c9eae2d006098909fb1434a94a99c1a02ceea4f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\containers\\SimpleContainer.js",statementMap:{"0":{start:{line:11,column:2},end:{line:13,column:4}},"1":{start:{line:29,column:2},end:{line:31,column:3}},"2":{start:{line:30,column:3},end:{line:30,column:44}},"3":{start:{line:32,column:2},end:{line:32,column:31}},"4":{start:{line:67,column:25},end:{line:67,column:27}},"5":{start:{line:68,column:2},end:{line:79,column:3}},"6":{start:{line:69,column:3},end:{line:78,column:6}},"7":{start:{line:70,column:21},end:{line:70,column:100}},"8":{start:{line:70,column:70},end:{line:70,column:99}},"9":{start:{line:72,column:5},end:{line:73,column:95}},"10":{start:{line:74,column:4},end:{line:76,column:5}},"11":{start:{line:75,column:5},end:{line:75,column:49}},"12":{start:{line:77,column:4},end:{line:77,column:55}},"13":{start:{line:80,column:19},end:{line:80,column:84}},"14":{start:{line:81,column:2},end:{line:81,column:54}},"15":{start:{line:82,column:2},end:{line:82,column:18}},"16":{start:{line:95,column:2},end:{line:95,column:45}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:1},end:{line:10,column:2}},loc:{start:{line:10,column:15},end:{line:14,column:2}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:1},end:{line:28,column:2}},loc:{start:{line:28,column:41},end:{line:33,column:2}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:1},end:{line:40,column:2}},loc:{start:{line:40,column:27},end:{line:83,column:2}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:69,column:47},end:{line:69,column:48}},loc:{start:{line:69,column:56},end:{line:78,column:4}},line:69},"4":{name:"(anonymous_4)",decl:{start:{line:70,column:57},end:{line:70,column:58}},loc:{start:{line:70,column:70},end:{line:70,column:99}},line:70},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:1},end:{line:88,column:2}},loc:{start:{line:88,column:16},end:{line:88,column:18}},line:88},"6":{name:"(anonymous_6)",decl:{start:{line:94,column:1},end:{line:94,column:2}},loc:{start:{line:94,column:32},end:{line:96,column:2}},line:94}},branchMap:{"0":{loc:{start:{line:28,column:21},end:{line:28,column:39}},type:"default-arg",locations:[{start:{line:28,column:37},end:{line:28,column:39}}],line:28},"1":{loc:{start:{line:29,column:2},end:{line:31,column:3}},type:"if",locations:[{start:{line:29,column:2},end:{line:31,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:29},"2":{loc:{start:{line:68,column:2},end:{line:79,column:3}},type:"if",locations:[{start:{line:68,column:2},end:{line:79,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:68},"3":{loc:{start:{line:72,column:5},end:{line:73,column:95}},type:"binary-expr",locations:[{start:{line:72,column:5},end:{line:72,column:44}},{start:{line:73,column:5},end:{line:73,column:95}}],line:72},"4":{loc:{start:{line:74,column:4},end:{line:76,column:5}},type:"if",locations:[{start:{line:74,column:4},end:{line:76,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:74}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8c9eae2d006098909fb1434a94a99c1a02ceea4f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_19f7ptg2v5=function(){return actualCoverage;};}return actualCoverage;}cov_19f7ptg2v5();// eslint-disable-next-line no-unused-vars
import FunctionWrapper from"../wrappers/FunctionWrapper.js";import AbstractContextContainer from"./AbstractContextContainer.js";import AbstractDIContainer from"./AbstractDIContainer.js";// eslint-disable-next-line no-unused-vars
import DependencyTree from"./helpers/DependencyTree.js";import InstanceHelper from"./helpers/InstanceHelper.js";class InvalidSimpleContainerParent extends Error{constructor(){cov_19f7ptg2v5().f[0]++;cov_19f7ptg2v5().s[0]++;super("Invalid simple container parent. Parent must be an instance of AbstractContextContainer or it's derived class, null or undefined.");}}/** Abstract Class representing a standard DI container (storage+factory)
 * @class
 * @abstract
 * @extends AbstractDIContainer
 */class SimpleContainer extends AbstractDIContainer{/**
	 *
	 * @param {AbstractContextContainer} parent - parent container
	 * @param {DependencyTree[]} [classTreeList=[]] - list of di objects dependency tree
	 */constructor(parent,classTreeList=(cov_19f7ptg2v5().b[0][0]++,[])){cov_19f7ptg2v5().f[1]++;cov_19f7ptg2v5().s[1]++;if(!(parent instanceof AbstractContextContainer)){cov_19f7ptg2v5().b[1][0]++;cov_19f7ptg2v5().s[2]++;throw new InvalidSimpleContainerParent();}else{cov_19f7ptg2v5().b[1][1]++;}cov_19f7ptg2v5().s[3]++;super(parent,classTreeList);}/** Returns new instance of di object.
	 * @protected
	 * @param {*} clazzTree
	 * @returns {Object|FunctionWrapper}
	 */_buildInstance(clazzTree){cov_19f7ptg2v5().f[2]++;// create new instance and add it in Map
// works
// const groups = clazzTree.groupByHeight().reverse();
// for (let i = 0; i < groups.length; i++) {
//     for (let j = 0; j < groups[i].deps.length; j++) {
//         const clazz = groups[i].deps[j];
//         const argumentValues = [];
//         clazz.deps.forEach((dependency) => {
//             if (dependency.lifecycle.id !== LifecycleEnum.Demanded) {
//                 argumentValues.push(this.getInstance(dependency.name) || this.getParent().getInstance(dependency.name));
//             } else {
//                 argumentValues.push(this.getParent().getInstance(dependency.name, dependency.lifecycle.id, true));
//             }
//         });
//         if (clazz.lifecycle.id !== LifecycleEnum.Demanded) {
//             const instance = InstanceHelper.createInstance(groups[i].deps[j], argumentValues);
//             if (clazzTree.baseNode.lifecycle.id !== groups[i].deps[j].lifecycle.id) {
//                 this.getParent().getScope(groups[i].deps[j].lifecycle.id)._addInstance(groups[i].deps[j].key, instance);
//             } else {
//                 this._addInstance(groups[i].deps[j].key, instance);
//             }
//         }
//     }
// }
// return this.getInstance(clazzTree.baseNode.name);
const argumentValues=(cov_19f7ptg2v5().s[4]++,[]);cov_19f7ptg2v5().s[5]++;if(clazzTree.baseNode.constructor.args.length>0){cov_19f7ptg2v5().b[2][0]++;cov_19f7ptg2v5().s[6]++;clazzTree.baseNode.constructor.args.forEach(arg=>{cov_19f7ptg2v5().f[3]++;const argClazz=(cov_19f7ptg2v5().s[7]++,this.getParent().classTreeList.find(clsTree=>{cov_19f7ptg2v5().f[4]++;cov_19f7ptg2v5().s[8]++;return clsTree.baseNode.name===arg;}));const existedInstance=(cov_19f7ptg2v5().s[9]++,(cov_19f7ptg2v5().b[3][0]++,this.getInstance(argClazz.baseNode.key))||(cov_19f7ptg2v5().b[3][1]++,this.getParent().getInstance(argClazz.baseNode.name,argClazz.baseNode.lifecycle.id,true)));cov_19f7ptg2v5().s[10]++;if(existedInstance){cov_19f7ptg2v5().b[4][0]++;cov_19f7ptg2v5().s[11]++;return argumentValues.push(existedInstance);}else{cov_19f7ptg2v5().b[4][1]++;}cov_19f7ptg2v5().s[12]++;argumentValues.push(this._buildInstance(argClazz));});}else{cov_19f7ptg2v5().b[2][1]++;}const instance=(cov_19f7ptg2v5().s[13]++,InstanceHelper.createInstance(clazzTree.baseNode,argumentValues));cov_19f7ptg2v5().s[14]++;this._addInstance(clazzTree.baseNode.key,instance);cov_19f7ptg2v5().s[15]++;return instance;}/**
	 * @protected
	 */_addInstance(){cov_19f7ptg2v5().f[5]++;}/** Push new di object in `classTreeList`
	 * @public
	 * @param {DependencyTree} diObjectClazzTree
	 */addDIObject(diObjectClazzTree){cov_19f7ptg2v5().f[6]++;cov_19f7ptg2v5().s[16]++;this.classTreeList.push(diObjectClazzTree);}}export default SimpleContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,