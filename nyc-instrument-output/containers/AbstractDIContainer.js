function cov_2i1y05x2ks(){var path="D:\\Programming\\xyz\\dizy\\src\\containers\\AbstractDIContainer.js";var hash="15114ed1d201de3a1f5f55e498db27b62bd871b6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\containers\\AbstractDIContainer.js",statementMap:{"0":{start:{line:10,column:2},end:{line:10,column:122}},"1":{start:{line:20,column:2},end:{line:23,column:4}},"2":{start:{line:39,column:2},end:{line:41,column:3}},"3":{start:{line:40,column:3},end:{line:40,column:31}},"4":{start:{line:42,column:2},end:{line:44,column:3}},"5":{start:{line:42,column:96},end:{line:42,column:132}},"6":{start:{line:43,column:3},end:{line:43,column:47}},"7":{start:{line:45,column:2},end:{line:45,column:10}},"8":{start:{line:46,column:2},end:{line:46,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:1},end:{line:9,column:2}},loc:{start:{line:9,column:15},end:{line:11,column:2}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:1},end:{line:19,column:2}},loc:{start:{line:19,column:15},end:{line:24,column:2}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:38,column:1},end:{line:38,column:2}},loc:{start:{line:38,column:41},end:{line:47,column:2}},line:38},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:83},end:{line:42,column:84}},loc:{start:{line:42,column:96},end:{line:42,column:132}},line:42}},branchMap:{"0":{loc:{start:{line:38,column:21},end:{line:38,column:39}},type:"default-arg",locations:[{start:{line:38,column:37},end:{line:38,column:39}}],line:38},"1":{loc:{start:{line:39,column:2},end:{line:41,column:3}},type:"if",locations:[{start:{line:39,column:2},end:{line:41,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:39},"2":{loc:{start:{line:39,column:6},end:{line:39,column:89}},type:"binary-expr",locations:[{start:{line:39,column:6},end:{line:39,column:21}},{start:{line:39,column:25},end:{line:39,column:45}},{start:{line:39,column:49},end:{line:39,column:89}}],line:39},"3":{loc:{start:{line:42,column:2},end:{line:44,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:44,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:42},"4":{loc:{start:{line:42,column:6},end:{line:42,column:134}},type:"binary-expr",locations:[{start:{line:42,column:6},end:{line:42,column:35}},{start:{line:42,column:40},end:{line:42,column:60}},{start:{line:42,column:64},end:{line:42,column:133}}],line:42}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"15114ed1d201de3a1f5f55e498db27b62bd871b6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2i1y05x2ks=function(){return actualCoverage;};}return actualCoverage;}cov_2i1y05x2ks();import DIContainer from"./DIContainer.js";import DependencyTree from"./helpers/DependencyTree.js";/** Class representing an error thrown when parent container isn't an instance of AbstractDIContainer.
 * @class
 * @extends Error
 */class InvalidDIParent extends Error{constructor(){cov_2i1y05x2ks().f[0]++;cov_2i1y05x2ks().s[0]++;super("Invalid di parent. Parent must be an instance of AbstractDIContainer or it's derived class, null or undefined.");}}/** Class representing an error thrown when DIContainer 'classTreeList' is invalid.
 * @class
 * @extends Error
 */class DIContainerClassTreeListInvalid extends Error{constructor(){cov_2i1y05x2ks().f[1]++;cov_2i1y05x2ks().s[1]++;super("DIContainer constructor's argument 'classTreeList' is invalid. "+"Argument 'classTreeList' must be an array of DependencyTree instances");}}/** Abstract Class AbstractDIContainer
 * @abstract
 * @extends {DIContainer}
 * @property {DependencyTree[]} classTreeList
 */class AbstractDIContainer extends DIContainer{/**
	 * @abstract
	 * @param {AbstractDIContainer} parent - parent container
	 * @param {DependencyTree[]} [classTreeList=[]] - list of di objects dependency tree
	 */constructor(parent,classTreeList=(cov_2i1y05x2ks().b[0][0]++,[])){cov_2i1y05x2ks().f[2]++;cov_2i1y05x2ks().s[2]++;if((cov_2i1y05x2ks().b[2][0]++,parent!==null)&&(cov_2i1y05x2ks().b[2][1]++,parent!==undefined)&&(cov_2i1y05x2ks().b[2][2]++,!(parent instanceof AbstractDIContainer))){cov_2i1y05x2ks().b[1][0]++;cov_2i1y05x2ks().s[3]++;throw new InvalidDIParent();}else{cov_2i1y05x2ks().b[1][1]++;}cov_2i1y05x2ks().s[4]++;if((cov_2i1y05x2ks().b[4][0]++,!Array.isArray(classTreeList))||(cov_2i1y05x2ks().b[4][1]++,classTreeList.length)&&(cov_2i1y05x2ks().b[4][2]++,classTreeList.find(clsTree=>{cov_2i1y05x2ks().f[3]++;cov_2i1y05x2ks().s[5]++;return!(clsTree instanceof DependencyTree);}))){cov_2i1y05x2ks().b[3][0]++;cov_2i1y05x2ks().s[6]++;throw new DIContainerClassTreeListInvalid();}else{cov_2i1y05x2ks().b[3][1]++;}cov_2i1y05x2ks().s[7]++;super();cov_2i1y05x2ks().s[8]++;this.classTreeList=classTreeList;}}export default AbstractDIContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmkxeTA1eDJrcyIsImFjdHVhbENvdmVyYWdlIiwiRElDb250YWluZXIiLCJEZXBlbmRlbmN5VHJlZSIsIkludmFsaWRESVBhcmVudCIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJmIiwicyIsIkRJQ29udGFpbmVyQ2xhc3NUcmVlTGlzdEludmFsaWQiLCJBYnN0cmFjdERJQ29udGFpbmVyIiwicGFyZW50IiwiY2xhc3NUcmVlTGlzdCIsImIiLCJ1bmRlZmluZWQiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJmaW5kIiwiY2xzVHJlZSJdLCJzb3VyY2VzIjpbIkFic3RyYWN0RElDb250YWluZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERJQ29udGFpbmVyIGZyb20gXCIuL0RJQ29udGFpbmVyLmpzXCI7XHJcbmltcG9ydCBEZXBlbmRlbmN5VHJlZSBmcm9tIFwiLi9oZWxwZXJzL0RlcGVuZGVuY3lUcmVlLmpzXCI7XHJcblxyXG4vKiogQ2xhc3MgcmVwcmVzZW50aW5nIGFuIGVycm9yIHRocm93biB3aGVuIHBhcmVudCBjb250YWluZXIgaXNuJ3QgYW4gaW5zdGFuY2Ugb2YgQWJzdHJhY3RESUNvbnRhaW5lci5cclxuICogQGNsYXNzXHJcbiAqIEBleHRlbmRzIEVycm9yXHJcbiAqL1xyXG5jbGFzcyBJbnZhbGlkRElQYXJlbnQgZXh0ZW5kcyBFcnJvciB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHRzdXBlcihcIkludmFsaWQgZGkgcGFyZW50LiBQYXJlbnQgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBBYnN0cmFjdERJQ29udGFpbmVyIG9yIGl0J3MgZGVyaXZlZCBjbGFzcywgbnVsbCBvciB1bmRlZmluZWQuXCIpO1xyXG5cdH1cclxufVxyXG5cclxuLyoqIENsYXNzIHJlcHJlc2VudGluZyBhbiBlcnJvciB0aHJvd24gd2hlbiBESUNvbnRhaW5lciAnY2xhc3NUcmVlTGlzdCcgaXMgaW52YWxpZC5cclxuICogQGNsYXNzXHJcbiAqIEBleHRlbmRzIEVycm9yXHJcbiAqL1xyXG5jbGFzcyBESUNvbnRhaW5lckNsYXNzVHJlZUxpc3RJbnZhbGlkIGV4dGVuZHMgRXJyb3Ige1xyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0c3VwZXIoXHJcblx0XHRcdFwiRElDb250YWluZXIgY29uc3RydWN0b3IncyBhcmd1bWVudCAnY2xhc3NUcmVlTGlzdCcgaXMgaW52YWxpZC4gXCIgK1xyXG5cdFx0XHRcdFwiQXJndW1lbnQgJ2NsYXNzVHJlZUxpc3QnIG11c3QgYmUgYW4gYXJyYXkgb2YgRGVwZW5kZW5jeVRyZWUgaW5zdGFuY2VzXCIsXHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuLyoqIEFic3RyYWN0IENsYXNzIEFic3RyYWN0RElDb250YWluZXJcclxuICogQGFic3RyYWN0XHJcbiAqIEBleHRlbmRzIHtESUNvbnRhaW5lcn1cclxuICogQHByb3BlcnR5IHtEZXBlbmRlbmN5VHJlZVtdfSBjbGFzc1RyZWVMaXN0XHJcbiAqL1xyXG5jbGFzcyBBYnN0cmFjdERJQ29udGFpbmVyIGV4dGVuZHMgRElDb250YWluZXIge1xyXG5cdC8qKlxyXG5cdCAqIEBhYnN0cmFjdFxyXG5cdCAqIEBwYXJhbSB7QWJzdHJhY3RESUNvbnRhaW5lcn0gcGFyZW50IC0gcGFyZW50IGNvbnRhaW5lclxyXG5cdCAqIEBwYXJhbSB7RGVwZW5kZW5jeVRyZWVbXX0gW2NsYXNzVHJlZUxpc3Q9W11dIC0gbGlzdCBvZiBkaSBvYmplY3RzIGRlcGVuZGVuY3kgdHJlZVxyXG5cdCAqL1xyXG5cdGNvbnN0cnVjdG9yKHBhcmVudCwgY2xhc3NUcmVlTGlzdCA9IFtdKSB7XHJcblx0XHRpZiAocGFyZW50ICE9PSBudWxsICYmIHBhcmVudCAhPT0gdW5kZWZpbmVkICYmICEocGFyZW50IGluc3RhbmNlb2YgQWJzdHJhY3RESUNvbnRhaW5lcikpIHtcclxuXHRcdFx0dGhyb3cgbmV3IEludmFsaWRESVBhcmVudCgpO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCFBcnJheS5pc0FycmF5KGNsYXNzVHJlZUxpc3QpIHx8IChjbGFzc1RyZWVMaXN0Lmxlbmd0aCAmJiBjbGFzc1RyZWVMaXN0LmZpbmQoKGNsc1RyZWUpID0+ICEoY2xzVHJlZSBpbnN0YW5jZW9mIERlcGVuZGVuY3lUcmVlKSkpKSB7XHJcblx0XHRcdHRocm93IG5ldyBESUNvbnRhaW5lckNsYXNzVHJlZUxpc3RJbnZhbGlkKCk7XHJcblx0XHR9XHJcblx0XHRzdXBlcigpO1xyXG5cdFx0dGhpcy5jbGFzc1RyZWVMaXN0ID0gY2xhc3NUcmVlTGlzdDtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFic3RyYWN0RElDb250YWluZXI7XHJcbiJdLCJtYXBwaW5ncyI6InMzRkFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixNQUFPLENBQUFFLFdBQVcsS0FBTSxrQkFBa0IsQ0FDMUMsTUFBTyxDQUFBQyxjQUFjLEtBQU0sNkJBQTZCLENBRXhEO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTSxDQUFBQyxlQUFlLFFBQVMsQ0FBQUMsS0FBTSxDQUNuQ0MsV0FBV0EsQ0FBQSxDQUFHLENBQUFOLGNBQUEsR0FBQU8sQ0FBQSxNQUFBUCxjQUFBLEdBQUFRLENBQUEsTUFDYixLQUFLLENBQUMsZ0hBQWdILENBQUMsQ0FDeEgsQ0FDRCxDQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTSxDQUFBQywrQkFBK0IsUUFBUyxDQUFBSixLQUFNLENBQ25EQyxXQUFXQSxDQUFBLENBQUcsQ0FBQU4sY0FBQSxHQUFBTyxDQUFBLE1BQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUNiLEtBQUssQ0FDSixpRUFBaUUsQ0FDaEUsdUVBQ0YsQ0FBQyxDQUNGLENBQ0QsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTSxDQUFBRSxtQkFBbUIsUUFBUyxDQUFBUixXQUFZLENBQzdDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsSUFDQ0ksV0FBV0EsQ0FBQ0ssTUFBTSxDQUFFQyxhQUFhLEVBQUFaLGNBQUEsR0FBQWEsQ0FBQSxTQUFHLEVBQUUsRUFBRSxDQUFBYixjQUFBLEdBQUFPLENBQUEsTUFBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQ3ZDLEdBQUksQ0FBQVIsY0FBQSxHQUFBYSxDQUFBLFNBQUFGLE1BQU0sR0FBSyxJQUFJLElBQUFYLGNBQUEsR0FBQWEsQ0FBQSxTQUFJRixNQUFNLEdBQUtHLFNBQVMsSUFBQWQsY0FBQSxHQUFBYSxDQUFBLFNBQUksRUFBRUYsTUFBTSxXQUFZLENBQUFELG1CQUFtQixDQUFDLEVBQUUsQ0FBQVYsY0FBQSxHQUFBYSxDQUFBLFNBQUFiLGNBQUEsR0FBQVEsQ0FBQSxNQUN4RixLQUFNLElBQUksQ0FBQUosZUFBZSxDQUFDLENBQUMsQ0FDNUIsQ0FBQyxLQUFBSixjQUFBLEdBQUFhLENBQUEsVUFBQWIsY0FBQSxHQUFBUSxDQUFBLE1BQ0QsR0FBSSxDQUFBUixjQUFBLEdBQUFhLENBQUEsVUFBQ0UsS0FBSyxDQUFDQyxPQUFPLENBQUNKLGFBQWEsQ0FBQyxHQUFLLENBQUFaLGNBQUEsR0FBQWEsQ0FBQSxTQUFBRCxhQUFhLENBQUNLLE1BQU0sSUFBQWpCLGNBQUEsR0FBQWEsQ0FBQSxTQUFJRCxhQUFhLENBQUNNLElBQUksQ0FBRUMsT0FBTyxFQUFLLENBQUFuQixjQUFBLEdBQUFPLENBQUEsTUFBQVAsY0FBQSxHQUFBUSxDQUFBLGNBQUVXLE9BQU8sV0FBWSxDQUFBaEIsY0FBYyxDQUFDLENBQUQsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFBSCxjQUFBLEdBQUFhLENBQUEsU0FBQWIsY0FBQSxHQUFBUSxDQUFBLE1BQ3JJLEtBQU0sSUFBSSxDQUFBQywrQkFBK0IsQ0FBQyxDQUFDLENBQzVDLENBQUMsS0FBQVQsY0FBQSxHQUFBYSxDQUFBLFVBQUFiLGNBQUEsR0FBQVEsQ0FBQSxNQUNELEtBQUssQ0FBQyxDQUFDLENBQUNSLGNBQUEsR0FBQVEsQ0FBQSxNQUNSLElBQUksQ0FBQ0ksYUFBYSxDQUFHQSxhQUFhLENBQ25DLENBQ0QsQ0FFQSxjQUFlLENBQUFGLG1CQUFtQiIsImlnbm9yZUxpc3QiOltdfQ==