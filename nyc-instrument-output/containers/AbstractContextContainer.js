function cov_ei4wx1yxg(){var path="D:\\Programming\\xyz\\dizy\\src\\containers\\AbstractContextContainer.js";var hash="5752e49389254e24b985b43fc3ea857688a9e765";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\containers\\AbstractContextContainer.js",statementMap:{"0":{start:{line:50,column:18},end:{line:51,column:70}},"1":{start:{line:52,column:2},end:{line:52,column:17}},"2":{start:{line:53,column:2},end:{line:53,column:59}},"3":{start:{line:63,column:2},end:{line:63,column:130}},"4":{start:{line:92,column:2},end:{line:92,column:20}},"5":{start:{line:93,column:2},end:{line:93,column:23}},"6":{start:{line:94,column:2},end:{line:94,column:19}},"7":{start:{line:95,column:2},end:{line:95,column:32}},"8":{start:{line:98,column:17},end:{line:98,column:22}},"9":{start:{line:102,column:12},end:{line:102,column:14}},"10":{start:{line:103,column:13},end:{line:103,column:22}},"11":{start:{line:105,column:17},end:{line:105,column:19}},"12":{start:{line:107,column:10},end:{line:107,column:19}},"13":{start:{line:114,column:2},end:{line:114,column:33}},"14":{start:{line:114,column:26},end:{line:114,column:33}},"15":{start:{line:115,column:2},end:{line:115,column:26}},"16":{start:{line:116,column:2},end:{line:116,column:22}},"17":{start:{line:117,column:2},end:{line:117,column:35}},"18":{start:{line:118,column:2},end:{line:118,column:34}},"19":{start:{line:119,column:2},end:{line:119,column:28}},"20":{start:{line:120,column:2},end:{line:122,column:5}},"21":{start:{line:121,column:3},end:{line:121,column:82}},"22":{start:{line:123,column:2},end:{line:123,column:23}},"23":{start:{line:124,column:2},end:{line:124,column:21}},"24":{start:{line:125,column:2},end:{line:129,column:5}},"25":{start:{line:126,column:3},end:{line:128,column:4}},"26":{start:{line:127,column:4},end:{line:127,column:17}},"27":{start:{line:130,column:2},end:{line:130,column:28}},"28":{start:{line:137,column:2},end:{line:137,column:78}},"29":{start:{line:147,column:18},end:{line:147,column:119}},"30":{start:{line:148,column:32},end:{line:148,column:63}},"31":{start:{line:149,column:2},end:{line:151,column:3}},"32":{start:{line:150,column:3},end:{line:150,column:58}},"33":{start:{line:152,column:18},end:{line:152,column:97}},"34":{start:{line:154,column:3},end:{line:156,column:63}},"35":{start:{line:157,column:22},end:{line:170,column:3}},"36":{start:{line:160,column:25},end:{line:160,column:53}},"37":{start:{line:161,column:4},end:{line:167,column:5}},"38":{start:{line:162,column:17},end:{line:162,column:80}},"39":{start:{line:162,column:43},end:{line:162,column:79}},"40":{start:{line:163,column:5},end:{line:165,column:6}},"41":{start:{line:164,column:6},end:{line:164,column:108}},"42":{start:{line:166,column:5},end:{line:166,column:78}},"43":{start:{line:168,column:4},end:{line:168,column:15}},"44":{start:{line:171,column:2},end:{line:178,column:4}},"45":{start:{line:190,column:2},end:{line:192,column:3}},"46":{start:{line:191,column:3},end:{line:191,column:44}},"47":{start:{line:193,column:2},end:{line:193,column:35}},"48":{start:{line:194,column:24},end:{line:194,column:71}},"49":{start:{line:195,column:2},end:{line:195,column:36}},"50":{start:{line:196,column:15},end:{line:196,column:87}},"51":{start:{line:197,column:2},end:{line:197,column:32}},"52":{start:{line:198,column:2},end:{line:198,column:14}},"53":{start:{line:205,column:2},end:{line:205,column:118}},"54":{start:{line:205,column:52},end:{line:205,column:116}},"55":{start:{line:243,column:2},end:{line:253,column:3}},"56":{start:{line:245,column:4},end:{line:245,column:55}},"57":{start:{line:245,column:28},end:{line:245,column:54}},"58":{start:{line:246,column:4},end:{line:246,column:10}},"59":{start:{line:248,column:4},end:{line:248,column:70}},"60":{start:{line:248,column:28},end:{line:248,column:69}},"61":{start:{line:249,column:4},end:{line:249,column:10}},"62":{start:{line:251,column:4},end:{line:251,column:65}},"63":{start:{line:251,column:28},end:{line:251,column:64}},"64":{start:{line:252,column:4},end:{line:252,column:10}},"65":{start:{line:255,column:2},end:{line:260,column:3}},"66":{start:{line:256,column:3},end:{line:256,column:113}},"67":{start:{line:256,column:51},end:{line:256,column:92}},"68":{start:{line:259,column:3},end:{line:259,column:120}},"69":{start:{line:259,column:50},end:{line:259,column:99}},"70":{start:{line:261,column:2},end:{line:264,column:3}},"71":{start:{line:262,column:3},end:{line:262,column:20}},"72":{start:{line:265,column:2},end:{line:265,column:15}},"73":{start:{line:284,column:2},end:{line:284,column:22}},"74":{start:{line:292,column:2},end:{line:298,column:3}},"75":{start:{line:293,column:3},end:{line:295,column:4}},"76":{start:{line:294,column:4},end:{line:294,column:67}},"77":{start:{line:296,column:3},end:{line:296,column:25}},"78":{start:{line:297,column:3},end:{line:297,column:25}},"79":{start:{line:305,column:2},end:{line:305,column:22}},"80":{start:{line:316,column:23},end:{line:319,column:4}},"81":{start:{line:317,column:3},end:{line:317,column:53}},"82":{start:{line:318,column:3},end:{line:318,column:33}},"83":{start:{line:320,column:2},end:{line:320,column:45}},"84":{start:{line:328,column:2},end:{line:328,column:24}},"85":{start:{line:336,column:2},end:{line:338,column:3}},"86":{start:{line:337,column:3},end:{line:337,column:35}},"87":{start:{line:339,column:2},end:{line:339,column:54}},"88":{start:{line:347,column:2},end:{line:349,column:3}},"89":{start:{line:348,column:3},end:{line:348,column:10}},"90":{start:{line:350,column:2},end:{line:350,column:48}},"91":{start:{line:351,column:2},end:{line:351,column:35}},"92":{start:{line:366,column:2},end:{line:366,column:87}},"93":{start:{line:366,column:44},end:{line:366,column:85}},"94":{start:{line:407,column:18},end:{line:407,column:27}},"95":{start:{line:408,column:2},end:{line:415,column:4}},"96":{start:{line:409,column:3},end:{line:414,column:4}},"97":{start:{line:410,column:4},end:{line:413,column:6}},"98":{start:{line:416,column:2},end:{line:421,column:5}},"99":{start:{line:417,column:15},end:{line:417,column:67}},"100":{start:{line:417,column:44},end:{line:417,column:66}},"101":{start:{line:418,column:3},end:{line:420,column:4}},"102":{start:{line:419,column:4},end:{line:419,column:63}},"103":{start:{line:431,column:2},end:{line:431,column:48}},"104":{start:{line:431,column:36},end:{line:431,column:48}},"105":{start:{line:432,column:20},end:{line:432,column:39}},"106":{start:{line:433,column:28},end:{line:433,column:111}},"107":{start:{line:433,column:65},end:{line:433,column:103}},"108":{start:{line:434,column:2},end:{line:445,column:3}},"109":{start:{line:435,column:3},end:{line:441,column:4}},"110":{start:{line:436,column:31},end:{line:436,column:71}},"111":{start:{line:437,column:35},end:{line:437,column:79}},"112":{start:{line:438,column:4},end:{line:440,column:5}},"113":{start:{line:439,column:5},end:{line:439,column:76}},"114":{start:{line:442,column:3},end:{line:442,column:56}},"115":{start:{line:444,column:3},end:{line:444,column:15}},"116":{start:{line:449,column:2},end:{line:453,column:5}},"117":{start:{line:450,column:3},end:{line:452,column:6}},"118":{start:{line:451,column:4},end:{line:451,column:51}},"119":{start:{line:454,column:2},end:{line:454,column:14}},"120":{start:{line:458,column:2},end:{line:458,column:41}},"121":{start:{line:458,column:34},end:{line:458,column:41}},"122":{start:{line:459,column:2},end:{line:459,column:61}},"123":{start:{line:459,column:29},end:{line:459,column:61}},"124":{start:{line:460,column:14},end:{line:460,column:63}},"125":{start:{line:460,column:42},end:{line:460,column:62}},"126":{start:{line:461,column:2},end:{line:467,column:5}},"127":{start:{line:462,column:3},end:{line:466,column:4}},"128":{start:{line:463,column:4},end:{line:463,column:50}},"129":{start:{line:465,column:4},end:{line:465,column:56}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:49,column:1},end:{line:49,column:2}},loc:{start:{line:49,column:46},end:{line:54,column:2}},line:49},"1":{name:"(anonymous_1)",decl:{start:{line:62,column:1},end:{line:62,column:2}},loc:{start:{line:62,column:15},end:{line:64,column:2}},line:62},"2":{name:"(anonymous_2)",decl:{start:{line:91,column:1},end:{line:91,column:2}},loc:{start:{line:91,column:91},end:{line:96,column:2}},line:91},"3":{name:"(anonymous_3)",decl:{start:{line:112,column:1},end:{line:112,column:2}},loc:{start:{line:112,column:8},end:{line:131,column:2}},line:112},"4":{name:"(anonymous_4)",decl:{start:{line:120,column:26},end:{line:120,column:27}},loc:{start:{line:120,column:36},end:{line:122,column:3}},line:120},"5":{name:"(anonymous_5)",decl:{start:{line:125,column:25},end:{line:125,column:26}},loc:{start:{line:125,column:36},end:{line:129,column:3}},line:125},"6":{name:"(anonymous_6)",decl:{start:{line:159,column:34},end:{line:159,column:35}},loc:{start:{line:159,column:43},end:{line:169,column:4}},line:159},"7":{name:"(anonymous_7)",decl:{start:{line:162,column:34},end:{line:162,column:35}},loc:{start:{line:162,column:43},end:{line:162,column:79}},line:162},"8":{name:"(anonymous_8)",decl:{start:{line:189,column:1},end:{line:189,column:2}},loc:{start:{line:189,column:29},end:{line:199,column:2}},line:189},"9":{name:"(anonymous_9)",decl:{start:{line:205,column:41},end:{line:205,column:42}},loc:{start:{line:205,column:52},end:{line:205,column:116}},line:205},"10":{name:"(anonymous_10)",decl:{start:{line:211,column:1},end:{line:211,column:2}},loc:{start:{line:211,column:17},end:{line:211,column:19}},line:211},"11":{name:"(anonymous_11)",decl:{start:{line:216,column:1},end:{line:216,column:2}},loc:{start:{line:216,column:15},end:{line:216,column:17}},line:216},"12":{name:"(anonymous_12)",decl:{start:{line:224,column:1},end:{line:224,column:2}},loc:{start:{line:224,column:19},end:{line:224,column:21}},line:224},"13":{name:"(anonymous_13)",decl:{start:{line:233,column:1},end:{line:233,column:2}},loc:{start:{line:233,column:32},end:{line:233,column:34}},line:233},"14":{name:"(anonymous_14)",decl:{start:{line:241,column:1},end:{line:241,column:2}},loc:{start:{line:241,column:35},end:{line:266,column:2}},line:241},"15":{name:"(anonymous_15)",decl:{start:{line:245,column:19},end:{line:245,column:20}},loc:{start:{line:245,column:28},end:{line:245,column:54}},line:245},"16":{name:"(anonymous_16)",decl:{start:{line:248,column:19},end:{line:248,column:20}},loc:{start:{line:248,column:28},end:{line:248,column:69}},line:248},"17":{name:"(anonymous_17)",decl:{start:{line:251,column:19},end:{line:251,column:20}},loc:{start:{line:251,column:28},end:{line:251,column:64}},line:251},"18":{name:"(anonymous_18)",decl:{start:{line:256,column:42},end:{line:256,column:43}},loc:{start:{line:256,column:51},end:{line:256,column:92}},line:256},"19":{name:"(anonymous_19)",decl:{start:{line:259,column:40},end:{line:259,column:41}},loc:{start:{line:259,column:50},end:{line:259,column:99}},line:259},"20":{name:"(anonymous_20)",decl:{start:{line:275,column:1},end:{line:275,column:2}},loc:{start:{line:275,column:22},end:{line:277,column:2}},line:275},"21":{name:"(anonymous_21)",decl:{start:{line:283,column:1},end:{line:283,column:2}},loc:{start:{line:283,column:13},end:{line:285,column:2}},line:283},"22":{name:"(anonymous_22)",decl:{start:{line:291,column:1},end:{line:291,column:2}},loc:{start:{line:291,column:19},end:{line:299,column:2}},line:291},"23":{name:"(anonymous_23)",decl:{start:{line:304,column:1},end:{line:304,column:2}},loc:{start:{line:304,column:17},end:{line:306,column:2}},line:304},"24":{name:"(anonymous_24)",decl:{start:{line:314,column:1},end:{line:314,column:2}},loc:{start:{line:314,column:38},end:{line:321,column:2}},line:314},"25":{name:"(anonymous_25)",decl:{start:{line:316,column:57},end:{line:316,column:58}},loc:{start:{line:316,column:70},end:{line:319,column:3}},line:316},"26":{name:"(anonymous_26)",decl:{start:{line:327,column:1},end:{line:327,column:2}},loc:{start:{line:327,column:15},end:{line:329,column:2}},line:327},"27":{name:"(anonymous_27)",decl:{start:{line:335,column:1},end:{line:335,column:2}},loc:{start:{line:335,column:24},end:{line:340,column:2}},line:335},"28":{name:"(anonymous_28)",decl:{start:{line:346,column:1},end:{line:346,column:2}},loc:{start:{line:346,column:24},end:{line:352,column:2}},line:346},"29":{name:"(anonymous_29)",decl:{start:{line:358,column:1},end:{line:358,column:2}},loc:{start:{line:358,column:23},end:{line:358,column:25}},line:358},"30":{name:"(anonymous_30)",decl:{start:{line:365,column:1},end:{line:365,column:2}},loc:{start:{line:365,column:39},end:{line:367,column:2}},line:365},"31":{name:"(anonymous_31)",decl:{start:{line:366,column:35},end:{line:366,column:36}},loc:{start:{line:366,column:44},end:{line:366,column:85}},line:366},"32":{name:"(anonymous_32)",decl:{start:{line:408,column:24},end:{line:408,column:25}},loc:{start:{line:409,column:3},end:{line:414,column:4}},line:409},"33":{name:"(anonymous_33)",decl:{start:{line:409,column:32},end:{line:409,column:33}},loc:{start:{line:410,column:4},end:{line:413,column:6}},line:410},"34":{name:"(anonymous_34)",decl:{start:{line:416,column:18},end:{line:416,column:19}},loc:{start:{line:416,column:27},end:{line:421,column:3}},line:416},"35":{name:"(anonymous_35)",decl:{start:{line:417,column:34},end:{line:417,column:35}},loc:{start:{line:417,column:44},end:{line:417,column:66}},line:417},"36":{name:"(anonymous_36)",decl:{start:{line:433,column:50},end:{line:433,column:51}},loc:{start:{line:433,column:65},end:{line:433,column:103}},line:433},"37":{name:"(anonymous_37)",decl:{start:{line:449,column:24},end:{line:449,column:25}},loc:{start:{line:449,column:33},end:{line:453,column:3}},line:449},"38":{name:"(anonymous_38)",decl:{start:{line:450,column:32},end:{line:450,column:33}},loc:{start:{line:450,column:41},end:{line:452,column:4}},line:450},"39":{name:"(anonymous_39)",decl:{start:{line:460,column:33},end:{line:460,column:34}},loc:{start:{line:460,column:42},end:{line:460,column:62}},line:460},"40":{name:"(anonymous_40)",decl:{start:{line:461,column:31},end:{line:461,column:32}},loc:{start:{line:461,column:41},end:{line:467,column:3}},line:461}},branchMap:{"0":{loc:{start:{line:91,column:13},end:{line:91,column:24}},type:"default-arg",locations:[{start:{line:91,column:22},end:{line:91,column:24}}],line:91},"1":{loc:{start:{line:91,column:26},end:{line:91,column:35}},type:"default-arg",locations:[{start:{line:91,column:33},end:{line:91,column:35}}],line:91},"2":{loc:{start:{line:91,column:37},end:{line:91,column:50}},type:"default-arg",locations:[{start:{line:91,column:46},end:{line:91,column:50}}],line:91},"3":{loc:{start:{line:91,column:52},end:{line:91,column:89}},type:"default-arg",locations:[{start:{line:91,column:65},end:{line:91,column:89}}],line:91},"4":{loc:{start:{line:114,column:2},end:{line:114,column:33}},type:"if",locations:[{start:{line:114,column:2},end:{line:114,column:33}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:114},"5":{loc:{start:{line:126,column:3},end:{line:128,column:4}},type:"if",locations:[{start:{line:126,column:3},end:{line:128,column:4}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:126},"6":{loc:{start:{line:147,column:18},end:{line:147,column:119}},type:"cond-expr",locations:[{start:{line:147,column:61},end:{line:147,column:96}},{start:{line:147,column:99},end:{line:147,column:119}}],line:147},"7":{loc:{start:{line:149,column:2},end:{line:151,column:3}},type:"if",locations:[{start:{line:149,column:2},end:{line:151,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:149},"8":{loc:{start:{line:149,column:6},end:{line:149,column:125}},type:"binary-expr",locations:[{start:{line:149,column:6},end:{line:149,column:39}},{start:{line:149,column:43},end:{line:149,column:79}},{start:{line:149,column:83},end:{line:149,column:125}}],line:149},"9":{loc:{start:{line:152,column:18},end:{line:152,column:97}},type:"binary-expr",locations:[{start:{line:152,column:18},end:{line:152,column:51}},{start:{line:152,column:55},end:{line:152,column:97}}],line:152},"10":{loc:{start:{line:154,column:3},end:{line:156,column:63}},type:"cond-expr",locations:[{start:{line:155,column:6},end:{line:155,column:71}},{start:{line:156,column:6},end:{line:156,column:63}}],line:154},"11":{loc:{start:{line:161,column:4},end:{line:167,column:5}},type:"if",locations:[{start:{line:161,column:4},end:{line:167,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:161},"12":{loc:{start:{line:161,column:8},end:{line:161,column:42}},type:"binary-expr",locations:[{start:{line:161,column:8},end:{line:161,column:20}},{start:{line:161,column:24},end:{line:161,column:42}}],line:161},"13":{loc:{start:{line:163,column:5},end:{line:165,column:6}},type:"if",locations:[{start:{line:163,column:5},end:{line:165,column:6}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:163},"14":{loc:{start:{line:166,column:12},end:{line:166,column:77}},type:"cond-expr",locations:[{start:{line:166,column:43},end:{line:166,column:66}},{start:{line:166,column:69},end:{line:166,column:77}}],line:166},"15":{loc:{start:{line:190,column:2},end:{line:192,column:3}},type:"if",locations:[{start:{line:190,column:2},end:{line:192,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:190},"16":{loc:{start:{line:243,column:2},end:{line:253,column:3}},type:"switch",locations:[{start:{line:244,column:3},end:{line:246,column:10}},{start:{line:247,column:3},end:{line:249,column:10}},{start:{line:250,column:3},end:{line:252,column:10}}],line:243},"17":{loc:{start:{line:255,column:2},end:{line:260,column:3}},type:"if",locations:[{start:{line:255,column:2},end:{line:260,column:3}},{start:{line:257,column:9},end:{line:260,column:3}}],line:255},"18":{loc:{start:{line:261,column:2},end:{line:264,column:3}},type:"if",locations:[{start:{line:261,column:2},end:{line:264,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:261},"19":{loc:{start:{line:292,column:2},end:{line:298,column:3}},type:"if",locations:[{start:{line:292,column:2},end:{line:298,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:292},"20":{loc:{start:{line:293,column:3},end:{line:295,column:4}},type:"if",locations:[{start:{line:293,column:3},end:{line:295,column:4}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:293},"21":{loc:{start:{line:320,column:9},end:{line:320,column:44}},type:"cond-expr",locations:[{start:{line:320,column:24},end:{line:320,column:32}},{start:{line:320,column:35},end:{line:320,column:44}}],line:320},"22":{loc:{start:{line:336,column:2},end:{line:338,column:3}},type:"if",locations:[{start:{line:336,column:2},end:{line:338,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:336},"23":{loc:{start:{line:347,column:2},end:{line:349,column:3}},type:"if",locations:[{start:{line:347,column:2},end:{line:349,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:347},"24":{loc:{start:{line:418,column:3},end:{line:420,column:4}},type:"if",locations:[{start:{line:418,column:3},end:{line:420,column:4}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:418},"25":{loc:{start:{line:431,column:2},end:{line:431,column:48}},type:"if",locations:[{start:{line:431,column:2},end:{line:431,column:48}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:431},"26":{loc:{start:{line:434,column:2},end:{line:445,column:3}},type:"if",locations:[{start:{line:434,column:2},end:{line:445,column:3}},{start:{line:443,column:9},end:{line:445,column:3}}],line:434},"27":{loc:{start:{line:435,column:3},end:{line:441,column:4}},type:"if",locations:[{start:{line:435,column:3},end:{line:441,column:4}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:435},"28":{loc:{start:{line:438,column:4},end:{line:440,column:5}},type:"if",locations:[{start:{line:438,column:4},end:{line:440,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:438},"29":{loc:{start:{line:457,column:21},end:{line:457,column:34}},type:"default-arg",locations:[{start:{line:457,column:32},end:{line:457,column:34}}],line:457},"30":{loc:{start:{line:458,column:2},end:{line:458,column:41}},type:"if",locations:[{start:{line:458,column:2},end:{line:458,column:41}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:458},"31":{loc:{start:{line:459,column:2},end:{line:459,column:61}},type:"if",locations:[{start:{line:459,column:2},end:{line:459,column:61}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:459},"32":{loc:{start:{line:462,column:3},end:{line:466,column:4}},type:"if",locations:[{start:{line:462,column:3},end:{line:466,column:4}},{start:{line:464,column:10},end:{line:466,column:4}}],line:462}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0],"30":[0,0],"31":[0,0],"32":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5752e49389254e24b985b43fc3ea857688a9e765"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ei4wx1yxg=function(){return actualCoverage;};}return actualCoverage;}cov_ei4wx1yxg();import{getArgumentDefaultValue,getBaseClass,getClassConstructorArgsNames,getFunctionArgsNames,parseType}from"../../ReflectionJs/index.js";// eslint-disable-next-line no-unused-vars
import DIClazz from"../DIClazz.js";import{DIObjectConfig}from"../DIObjectConfig.js";import DependencyLoopError from"../errors/DependencyLoopError.js";import InvalidAbstractContextConfig from"../errors/InvalidAbstractContextConfig.js";import InvalidDIObjectArgDefaultValue from"../errors/InvalidDIObjectArgDefaultValue.js";import InvalidDIObjectArgumentName from"../errors/InvalidDIObjectArgumentName.js";import NotAllowedDIObjectType from"../errors/NotAllowDIObjectType.js";import AbstractDIContainer from"./AbstractDIContainer.js";import DIObjectKeyFactory from"./helpers/DIObjectKeyFactory.js";// eslint-disable-next-line no-unused-vars
import DependencyTree from"./helpers/DependencyTree.js";import DependencyTreeFactory from"./helpers/DependencyTreeFactory.js";// eslint-disable-next-line no-unused-vars
import FunctionWrapper from"../wrappers/FunctionWrapper.js";// class DIObjectHasInvalidName extends Error {
// 	constructor(name, contextName) {
// 		const message = `DI Object has invalid name { ${name} }. Rename this DI object in ${contextName} context config.`;
// 		super(message);
// 		this.name = "DI Object's name is invalid";
// 	}
// }
// class DIObjectHasInvalidLifecycleIdentifier extends Error {
// 	constructor(lifecycleId, contextName) {
// 		const message = `DI Object has invalid lifecycle identifier { ${lifecycleId} }. Change this DI object in ${contextName} context config.`;
// 		super(message);
// 		this.name = "DI Object's lifecycle identifier is invalid";
// 	}
// }
// class DIConfigHasObjectsWithRepeatedNames extends Error {
//     constructor(names, contextName) {
//         const message = `There are DI objects with the same names { ${names.join(', ')} } in ${contextName} context config.`;
//         super(message);
//         this.name = "DI Config has objects with repeated names";
//     }
// }
class DerivedClassConstructorArgsError extends Error{constructor(derivedClassName,baseClassName){cov_ei4wx1yxg().f[0]++;const message=(cov_ei4wx1yxg().s[0]++,`The number of constructor arguments in the derived class ${derivedClassName} must be >= than the number of
            constructor arguments of its base class ${baseClassName}.`);cov_ei4wx1yxg().s[1]++;super(message);cov_ei4wx1yxg().s[2]++;this.name="Derived class constructor args count error";}}/** Class representing an error thrown when child of di context isn't an instance of AbstractContextContainer.
 * @class
 * @extends Error
 */class InvalidContextChild extends Error{constructor(){cov_ei4wx1yxg().f[1]++;cov_ei4wx1yxg().s[3]++;super("Invalid context child. Child must be an instance of AbstractContextContainer or it's derived class, null or undefined.");}}/** Abstract Class for context - AbstractContextContainer. It takes config and generates dependency trees, validate it, create
 * @class
 * @abstract
 * @extends AbstractDIContainer
 *
 * @property {DependencyTree[]} classTreeList - list of di objects dependency tree.
 * @property {Map} scopes - Map of Simple DI Containers, like SingletoneContainer, SessionContainer, DemandedFactory.
//  *
//  * @property {boolean} contextReady - Is context ready for work?
//  * @private
//  *
//  * @property {DIClazz[]} clazzes - List of DIObjectClazz.
//  * @private
//  *
//  * @property {Map<AbstractContextContainer>} - Map of AbstractContextContainer.
//  * @private
 */class AbstractContextContainer extends AbstractDIContainer{/**
	 * @param {DIObjectConfig[]} [config=[]] - list of di objects configs
	 * @param {string} [name=""] - name of context
	 * @param {AbstractDIContainer} [parent=null] - parent context
	 * @param {DIObjectKeyFactory} [keyFactory=new DIObjectKeyFactory()] - Keys Factory
	 */constructor(config=(cov_ei4wx1yxg().b[0][0]++,[]),name=(cov_ei4wx1yxg().b[1][0]++,""),parent=(cov_ei4wx1yxg().b[2][0]++,null),keyFactory=(cov_ei4wx1yxg().b[3][0]++,new DIObjectKeyFactory())){cov_ei4wx1yxg().f[2]++;cov_ei4wx1yxg().s[4]++;super(parent,[]);cov_ei4wx1yxg().s[5]++;this.config=config;cov_ei4wx1yxg().s[6]++;this.name=name;cov_ei4wx1yxg().s[7]++;this.#keyFactory=keyFactory;}#contextReady=(cov_ei4wx1yxg().s[8]++,false);#parent;#keyFactory;#clazzes=(cov_ei4wx1yxg().s[9]++,[]);#children=(cov_ei4wx1yxg().s[10]++,new Map());classTreeList=(cov_ei4wx1yxg().s[11]++,[]);scopes=(cov_ei4wx1yxg().s[12]++,new Map());/** Init context container: validate config, define classTreeList, create and init scopes and children.
	 * @public
	 */init(){cov_ei4wx1yxg().f[3]++;cov_ei4wx1yxg().s[13]++;// this.#validateDIConfig();
if(this.#contextReady){cov_ei4wx1yxg().b[4][0]++;cov_ei4wx1yxg().s[14]++;return;}else{cov_ei4wx1yxg().b[4][1]++;}cov_ei4wx1yxg().s[15]++;this.classTreeList=[];cov_ei4wx1yxg().s[16]++;this.#initClazzes();cov_ei4wx1yxg().s[17]++;this.#validateObjectsArgsNames();cov_ei4wx1yxg().s[18]++;this.#validateDependencyGraph();cov_ei4wx1yxg().s[19]++;this.#initClassTreeList();cov_ei4wx1yxg().s[20]++;this.classTreeList.sort((a,b)=>{cov_ei4wx1yxg().f[4]++;cov_ei4wx1yxg().s[21]++;return a.baseNode.constructor.args.length-b.baseNode.constructor.args.length;});cov_ei4wx1yxg().s[22]++;this._createScopes();cov_ei4wx1yxg().s[23]++;this._initScopes();cov_ei4wx1yxg().s[24]++;this.#children.forEach(child=>{cov_ei4wx1yxg().f[5]++;cov_ei4wx1yxg().s[25]++;if(child.init){cov_ei4wx1yxg().b[5][0]++;cov_ei4wx1yxg().s[26]++;child.init();}else{cov_ei4wx1yxg().b[5][1]++;}});cov_ei4wx1yxg().s[27]++;this.#contextReady=true;}/** Init clazzes
	 * @private
	 */#initClazzes(){cov_ei4wx1yxg().s[28]++;this.#clazzes=this.config.map(this.#diClazzFromDIObjectConfig.bind(this));}/** Returns DIClazz created from DIObjectConfig
	 * @private
	 *
	 * @param {DIObjectConfig} containerObject - config of di object like SingletoneConfig, SessionConfig or DemandedConfig
	 * @returns {DIClazz}
	 */#diClazzFromDIObjectConfig(containerObject){const objName=(cov_ei4wx1yxg().s[29]++,typeof containerObject.name==="symbol"?(cov_ei4wx1yxg().b[6][0]++,Symbol.keyFor(containerObject.name)):(cov_ei4wx1yxg().b[6][1]++,containerObject.name));const typeOfContainerObject=(cov_ei4wx1yxg().s[30]++,parseType(containerObject.type));cov_ei4wx1yxg().s[31]++;if((cov_ei4wx1yxg().b[8][0]++,typeOfContainerObject!=="class")&&(cov_ei4wx1yxg().b[8][1]++,typeOfContainerObject!=="function")&&(cov_ei4wx1yxg().b[8][2]++,typeOfContainerObject!=="function class")){cov_ei4wx1yxg().b[7][0]++;cov_ei4wx1yxg().s[32]++;throw new NotAllowedDIObjectType(containerObject.type);}else{cov_ei4wx1yxg().b[7][1]++;}const isClass=(cov_ei4wx1yxg().s[33]++,(cov_ei4wx1yxg().b[9][0]++,typeOfContainerObject==="class")||(cov_ei4wx1yxg().b[9][1]++,typeOfContainerObject==="function class"));const constructorArgs=(cov_ei4wx1yxg().s[34]++,typeOfContainerObject==="class"?(cov_ei4wx1yxg().b[10][0]++,{args:getClassConstructorArgsNames(containerObject.type).args}):(cov_ei4wx1yxg().b[10][1]++,{args:getFunctionArgsNames(containerObject.type).args}));const constructor=(cov_ei4wx1yxg().s[35]++,{...constructorArgs,args:constructorArgs.args.map(arg=>{cov_ei4wx1yxg().f[6]++;const defaultValue=(cov_ei4wx1yxg().s[36]++,getArgumentDefaultValue(arg));cov_ei4wx1yxg().s[37]++;if((cov_ei4wx1yxg().b[12][0]++,defaultValue)&&(cov_ei4wx1yxg().b[12][1]++,defaultValue.value)){cov_ei4wx1yxg().b[11][0]++;const obj=(cov_ei4wx1yxg().s[38]++,this.config.find(cls=>{cov_ei4wx1yxg().f[7]++;cov_ei4wx1yxg().s[39]++;return cls.type.name===defaultValue.value;}));cov_ei4wx1yxg().s[40]++;if(!obj){cov_ei4wx1yxg().b[13][0]++;cov_ei4wx1yxg().s[41]++;throw new InvalidDIObjectArgDefaultValue(containerObject.name,defaultValue.name,defaultValue.value);}else{cov_ei4wx1yxg().b[13][1]++;}cov_ei4wx1yxg().s[42]++;return typeof obj.name==="symbol"?(cov_ei4wx1yxg().b[14][0]++,Symbol.keyFor(obj.name)):(cov_ei4wx1yxg().b[14][1]++,obj.name);}else{cov_ei4wx1yxg().b[11][1]++;}cov_ei4wx1yxg().s[43]++;return arg;})});cov_ei4wx1yxg().s[44]++;return new DIClazz(this.#keyFactory.createKey(this,objName,containerObject.lifecycle,isClass),objName,containerObject.type,isClass,containerObject.lifecycle,constructor);// ToDo Правила жизненных циклов
}/** Add new di object to existed context
	 * @param {DIObjectConfig} diObjectConfig - config of new di object
	 * @example <caption>Usage of addDIObject.</caption>
	 * // returns tree
	 * context.addDIObject(SingletoneConfig(...));
	 * @returns {DependencyTree}
	 */addDIObject(diObjectConfig){cov_ei4wx1yxg().f[8]++;cov_ei4wx1yxg().s[45]++;if(!(diObjectConfig instanceof DIObjectConfig)){cov_ei4wx1yxg().b[15][0]++;cov_ei4wx1yxg().s[46]++;throw new InvalidAbstractContextConfig();}else{cov_ei4wx1yxg().b[15][1]++;}cov_ei4wx1yxg().s[47]++;this.config.push(diObjectConfig);const diObjectClazz=(cov_ei4wx1yxg().s[48]++,this.#diClazzFromDIObjectConfig(diObjectConfig));cov_ei4wx1yxg().s[49]++;this.#clazzes.push(diObjectClazz);const tree=(cov_ei4wx1yxg().s[50]++,DependencyTreeFactory.createDependencyTree(diObjectClazz,this.#clazzes));cov_ei4wx1yxg().s[51]++;this.classTreeList.push(tree);cov_ei4wx1yxg().s[52]++;return tree;}/** Init classTreeList prop with DependencyTreeFactory
	 * @private
	 */#initClassTreeList(){cov_ei4wx1yxg().s[53]++;this.classTreeList=this.#clazzes.map(clazz=>{cov_ei4wx1yxg().f[9]++;cov_ei4wx1yxg().s[54]++;return DependencyTreeFactory.createDependencyTree(clazz,this.#clazzes);});}/** Create and add scopes to AbstractContextContainer.#scopes
	 * @protected
	 */_createScopes(){cov_ei4wx1yxg().f[10]++;}/**
	 * @protected
	 */_initScopes(){cov_ei4wx1yxg().f[11]++;}/** Returns `true` if context has an instance of di object with specified name.
	 * @public
	 * @param {string} name - name of di object from this context
	 * @returns {boolean}
	 */ // eslint-disable-next-line no-unused-vars
hasInstance(name){cov_ei4wx1yxg().f[12]++;}/** Get an instance of di object with specified name and lifecycleId.
	 * @public
	 * @param {string|symbol|Function} name - name of di object from this context
	 * @param {number} [lifecycleId] - id of Lifecycle
	 * @returns {Object|FunctionWrapper|undefined}
	 */ // eslint-disable-next-line no-unused-vars
getInstance(name,lifecycleId){cov_ei4wx1yxg().f[13]++;}/** Find dependency tree by name and lifecycle id of di object.
	 * @protected
	 * @param {string|symbol|Function} name - name of di object
	 * @param {number} [lifecycleId] - di object lifecycle id
	 * @returns {DependencyTree|undefined}
	 */_findClassTree(name,lifecycleId){cov_ei4wx1yxg().f[14]++;let findCallback;cov_ei4wx1yxg().s[55]++;switch(typeof name){case"string":cov_ei4wx1yxg().b[16][0]++;cov_ei4wx1yxg().s[56]++;findCallback=cls=>{cov_ei4wx1yxg().f[15]++;cov_ei4wx1yxg().s[57]++;return cls.baseNode.name===name;};cov_ei4wx1yxg().s[58]++;break;case"symbol":cov_ei4wx1yxg().b[16][1]++;cov_ei4wx1yxg().s[59]++;findCallback=cls=>{cov_ei4wx1yxg().f[16]++;cov_ei4wx1yxg().s[60]++;return cls.baseNode.name===Symbol.keyFor(name);};cov_ei4wx1yxg().s[61]++;break;default:cov_ei4wx1yxg().b[16][2]++;cov_ei4wx1yxg().s[62]++;findCallback=cls=>{cov_ei4wx1yxg().f[17]++;cov_ei4wx1yxg().s[63]++;return cls.baseNode.type.name===name.name;};cov_ei4wx1yxg().s[64]++;break;}let clazz;cov_ei4wx1yxg().s[65]++;if(lifecycleId!==undefined){cov_ei4wx1yxg().b[17][0]++;cov_ei4wx1yxg().s[66]++;clazz=[...this.classTreeList].filter(cls=>{cov_ei4wx1yxg().f[18]++;cov_ei4wx1yxg().s[67]++;return cls.baseNode.lifecycle.id===lifecycleId;}).find(findCallback);}else{cov_ei4wx1yxg().b[17][1]++;cov_ei4wx1yxg().s[68]++;// find first class by key in order from Persistent to Demanded
clazz=[...this.classTreeList].sort((a,b)=>{cov_ei4wx1yxg().f[19]++;cov_ei4wx1yxg().s[69]++;return a.baseNode.lifecycle.id-b.baseNode.lifecycle.id;}).find(findCallback);}cov_ei4wx1yxg().s[70]++;if(!clazz){cov_ei4wx1yxg().b[18][0]++;cov_ei4wx1yxg().s[71]++;return undefined;// throw new HasNoDIObjectWithKey(typeof name !== 'string' ? name.name : name, this.name);
}else{cov_ei4wx1yxg().b[18][1]++;}cov_ei4wx1yxg().s[72]++;return clazz;}/** Returns `true` if type of di object with specified key is the same as 'type' argument.
	 * @abstract
	 * @param {string|symbol} key - 'key' of di object
	 * @param {any} type - type of di object
	 * @returns {boolean}
	 */ // eslint-disable-next-line no-unused-vars
typeMatch(key,type){cov_ei4wx1yxg().f[20]++;}// is DI object with key instance of type
/** Get parent DIContainer.
	 * @public
	 * @returns {AbstractContextContainer|null}
	 */getParent(){cov_ei4wx1yxg().f[21]++;cov_ei4wx1yxg().s[73]++;return this.#parent;}/** Set parent of this context and add this context as a child to parent.
	 * @public
	 * @param {AbstractContextContainer} parent
	 */setParent(parent){cov_ei4wx1yxg().f[22]++;cov_ei4wx1yxg().s[74]++;if(parent instanceof AbstractContextContainer){cov_ei4wx1yxg().b[19][0]++;cov_ei4wx1yxg().s[75]++;if(parent.getChildren().has(this.name)){cov_ei4wx1yxg().b[20][0]++;cov_ei4wx1yxg().s[76]++;throw new Error("Parent already has this context as a child.");}else{cov_ei4wx1yxg().b[20][1]++;}cov_ei4wx1yxg().s[77]++;this.#parent=parent;cov_ei4wx1yxg().s[78]++;parent.addChild(this);}else{cov_ei4wx1yxg().b[19][1]++;}}/** Removes reference to parent.
	 * @protected
	 */_removeParent(){cov_ei4wx1yxg().f[23]++;cov_ei4wx1yxg().s[79]++;this.#parent=null;}/** Get di object instance from child context.
	 * @protected
	 * @param {string|symbol|Function} name - name of di object from this context
	 * @param {number} [lifecycleId] - id of Lifecycle
	 * @returns {Object|FunctionWrapper|undefined}
	 */_getChildInstance(name,lifecycleId){cov_ei4wx1yxg().f[24]++;let instance;const childContext=(cov_ei4wx1yxg().s[80]++,[...this.#children.values()].find(context=>{cov_ei4wx1yxg().f[25]++;cov_ei4wx1yxg().s[81]++;instance=context.getInstance(name,lifecycleId);cov_ei4wx1yxg().s[82]++;return instance!==undefined;}));cov_ei4wx1yxg().s[83]++;return childContext?(cov_ei4wx1yxg().b[21][0]++,instance):(cov_ei4wx1yxg().b[21][1]++,undefined);}/** Get children of context.
	 * @public
	 * @returns {Map<string, AbstractContextContainer>}
	 */getChildren(){cov_ei4wx1yxg().f[26]++;cov_ei4wx1yxg().s[84]++;return this.#children;}/** Add child context.
	 * @public
	 * @param {AbstractContextContainer} childContext
	 */addChild(childContext){cov_ei4wx1yxg().f[27]++;cov_ei4wx1yxg().s[85]++;if(!(childContext instanceof AbstractContextContainer)){cov_ei4wx1yxg().b[22][0]++;cov_ei4wx1yxg().s[86]++;throw new InvalidContextChild();}else{cov_ei4wx1yxg().b[22][1]++;}cov_ei4wx1yxg().s[87]++;this.#children.set(childContext.name,childContext);}/** Removes child context by it's name.
	 * @public
	 * @param {string} childName - name of child context
	 */deleteChild(childName){cov_ei4wx1yxg().f[28]++;cov_ei4wx1yxg().s[88]++;if(!this.#children.has(childName)){cov_ei4wx1yxg().b[23][0]++;cov_ei4wx1yxg().s[89]++;return;}else{cov_ei4wx1yxg().b[23][1]++;}cov_ei4wx1yxg().s[90]++;this.#children.get(childName)._removeParent();cov_ei4wx1yxg().s[91]++;this.#children.delete(childName);}/** Get scope by lifecycle id.
	 * @abstract
	 */ // eslint-disable-next-line no-unused-vars
getScope(lifecycleId){cov_ei4wx1yxg().f[29]++;}/** Filter dependency tree list by lifecycle id.
	 * @public
	 * @param {number} lifecycleId
	 * @returns {DependencyTree[]}
	 */filterClassesByLifecycle(lifecycleId){cov_ei4wx1yxg().f[30]++;cov_ei4wx1yxg().s[92]++;return this.classTreeList.filter(cls=>{cov_ei4wx1yxg().f[31]++;cov_ei4wx1yxg().s[93]++;return cls.baseNode.lifecycle.id===lifecycleId;});}// eslint-disable-next-line no-unused-vars
#validateDIConfig(config){// Check if there are objects with invalid name
// !name !== true || typeof name === 'string'
// if (!Array.isArray(config) || config.find(c => !(c instanceof DIObjectConfig))) {
//     throw new InvalidContextConfig();
// }
// const objectWithInvalidName = config.find(({ name }) => !name === true || !(typeof name === 'string' || typeof name === 'symbol'));
// if (objectWithInvalidName) {
//     throw new DIObjectHasInvalidName(objectWithInvalidName.name, this.name);
// }
// Accept repeated names *, if these objects have other lifecycle
// Check if there are objects with the same names
// const configSet = new Set(this.config.map((objectConfig) => objectConfig.name));
// if (this.config.length !== configSet.size) {
//     const objectsByNames = Object.fromEntries(Array.from(configSet.values()).map(key => ([
//         key,
//         this.config.filter((objectConfig) => objectConfig.name === key),
//     ])));
//     const objectsWithRepeatedNames = Object.entries(objectsByNames).filter(([name, items]) => items.length > 1);
//     throw new DIConfigHasObjectsWithRepeatedNames(objectsWithRepeatedNames.map(obj => obj[0]), this.name);
// }
// Check object lifecycle
// Change this conditions after Lifecycle class will be defined.
// lifecycle prop must be an instance of Lifecycle (it's checked in DIObjectConfig constructor)
// !!! now we don't need to registrate id in LifecycleEnum, because it's done in Lifecycle's constructor
// const objectWithInvalidLifecycle = this.config.find(({ lifecycle }) => {
//     return !(lifecycle instanceof Lifecycle)
//         || !Object.values(LifecycleEnum).find(v => v === lifecycle.id);
// });
// if (objectWithInvalidLifecycle) {
//     throw new DIObjectHasInvalidLifecycleIdentifier(objectWithInvalidLifecycle.lifecycle.id, this.name);
// }
// Check Inheritance Hierarchy
// this.config.forEach((clazz) => this.#validateInheritanceHierarchy(clazz.type));
}#validateObjectsArgsNames(){const argsSet=(cov_ei4wx1yxg().s[94]++,new Set());cov_ei4wx1yxg().s[95]++;this.#clazzes.forEach(cls=>{cov_ei4wx1yxg().f[32]++;cov_ei4wx1yxg().s[96]++;return cls.constructor.args.forEach(arg=>{cov_ei4wx1yxg().f[33]++;cov_ei4wx1yxg().s[97]++;return argsSet.add({name:arg,place:cls.name});});});cov_ei4wx1yxg().s[98]++;argsSet.forEach(arg=>{cov_ei4wx1yxg().f[34]++;const cls=(cov_ei4wx1yxg().s[99]++,this.#clazzes.find(elem=>{cov_ei4wx1yxg().f[35]++;cov_ei4wx1yxg().s[100]++;return elem.name===arg.name;}));cov_ei4wx1yxg().s[101]++;if(cls===undefined){cov_ei4wx1yxg().b[24][0]++;cov_ei4wx1yxg().s[102]++;throw new InvalidDIObjectArgumentName(arg.place,arg.name);}else{cov_ei4wx1yxg().b[24][1]++;}});}#validateInheritanceHierarchy(clazz){cov_ei4wx1yxg().s[103]++;// check inheritance existence
// if base class exist and it is not an Object Class,
//    check if base class is a part of this di context
//      check if constructor arguments count <= derived class constructor args count and return to beggining,
//			otherwise throw an exception
// else return true
if(parseType(clazz)!=="class"){cov_ei4wx1yxg().b[25][0]++;cov_ei4wx1yxg().s[104]++;return true;}else{cov_ei4wx1yxg().b[25][1]++;}const baseClass=(cov_ei4wx1yxg().s[105]++,getBaseClass(clazz));const isAnotherDIObject=(cov_ei4wx1yxg().s[106]++,this.config.findIndex(objConfig=>{cov_ei4wx1yxg().f[36]++;cov_ei4wx1yxg().s[107]++;return objConfig.type.name===baseClass.name;})!==-1);cov_ei4wx1yxg().s[108]++;if(baseClass.name!=="Object"){cov_ei4wx1yxg().b[26][0]++;cov_ei4wx1yxg().s[109]++;if(isAnotherDIObject){cov_ei4wx1yxg().b[27][0]++;const clsConstructorArgs=(cov_ei4wx1yxg().s[110]++,getClassConstructorArgsNames(clazz).args);const baseClsConstructorArgs=(cov_ei4wx1yxg().s[111]++,getClassConstructorArgsNames(baseClass).args);cov_ei4wx1yxg().s[112]++;if(clsConstructorArgs.length<baseClsConstructorArgs.length){cov_ei4wx1yxg().b[28][0]++;cov_ei4wx1yxg().s[113]++;throw new DerivedClassConstructorArgsError(clazz.name,baseClass.name);}else{cov_ei4wx1yxg().b[28][1]++;}}else{cov_ei4wx1yxg().b[27][1]++;}cov_ei4wx1yxg().s[114]++;return this.#validateInheritanceHierarchy(baseClass);}else{cov_ei4wx1yxg().b[26][1]++;cov_ei4wx1yxg().s[115]++;return true;}}#validateDependencyGraph(){cov_ei4wx1yxg().s[116]++;this.#clazzes.forEach(cls=>{cov_ei4wx1yxg().f[37]++;cov_ei4wx1yxg().s[117]++;cls.constructor.args.forEach(arg=>{cov_ei4wx1yxg().f[38]++;cov_ei4wx1yxg().s[118]++;this.#findDependencyLoop([cls.name,arg],arg);});});cov_ei4wx1yxg().s[119]++;return true;}#findDependencyLoop(depsList=(cov_ei4wx1yxg().b[29][0]++,[]),argName){cov_ei4wx1yxg().s[120]++;if(this.#clazzes.length===0){cov_ei4wx1yxg().b[30][0]++;cov_ei4wx1yxg().s[121]++;return;}else{cov_ei4wx1yxg().b[30][1]++;}cov_ei4wx1yxg().s[122]++;if(argName===undefined){cov_ei4wx1yxg().b[31][0]++;cov_ei4wx1yxg().s[123]++;argName=this.#clazzes[0].name;}else{cov_ei4wx1yxg().b[31][1]++;}const cls=(cov_ei4wx1yxg().s[124]++,this.#clazzes.find(cls=>{cov_ei4wx1yxg().f[39]++;cov_ei4wx1yxg().s[125]++;return cls.name===argName;}));cov_ei4wx1yxg().s[126]++;cls.constructor.args.forEach(elem=>{cov_ei4wx1yxg().f[40]++;cov_ei4wx1yxg().s[127]++;if(depsList.includes(elem)){cov_ei4wx1yxg().b[32][0]++;cov_ei4wx1yxg().s[128]++;throw new DependencyLoopError(elem,cls.name);}else{cov_ei4wx1yxg().b[32][1]++;cov_ei4wx1yxg().s[129]++;this.#findDependencyLoop([...depsList,elem],elem);}});}}export default AbstractContextContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,