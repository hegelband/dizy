function cov_1lg2rx1bl7(){var path="D:\\Programming\\xyz\\dizy\\src\\containers\\ContextContainerFactory.js";var hash="86d4963c943546af957335c916d984a339c4d889";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\containers\\ContextContainerFactory.js",statementMap:{"0":{start:{line:23,column:1},end:{line:28,column:3}},"1":{start:{line:24,column:2},end:{line:26,column:3}},"2":{start:{line:25,column:3},end:{line:25,column:40}},"3":{start:{line:27,column:2},end:{line:27,column:24}},"4":{start:{line:38,column:1},end:{line:38,column:49}},"5":{start:{line:38,column:14},end:{line:38,column:48}},"6":{start:{line:47,column:17},end:{line:47,column:26}},"7":{start:{line:49,column:2},end:{line:51,column:3}},"8":{start:{line:50,column:3},end:{line:50,column:47}},"9":{start:{line:52,column:2},end:{line:54,column:3}},"10":{start:{line:53,column:3},end:{line:53,column:49}},"11":{start:{line:55,column:2},end:{line:55,column:43}},"12":{start:{line:67,column:2},end:{line:69,column:3}},"13":{start:{line:68,column:3},end:{line:68,column:34}},"14":{start:{line:70,column:2},end:{line:75,column:3}},"15":{start:{line:71,column:19},end:{line:71,column:73}},"16":{start:{line:72,column:3},end:{line:72,column:29}},"17":{start:{line:73,column:3},end:{line:73,column:42}},"18":{start:{line:74,column:3},end:{line:74,column:18}},"19":{start:{line:76,column:2},end:{line:76,column:14}}},fnMap:{"0":{name:"createDIObjectClassConstructor",decl:{start:{line:22,column:16},end:{line:22,column:46}},loc:{start:{line:22,column:66},end:{line:29,column:1}},line:22},"1":{name:"DIObject",decl:{start:{line:23,column:17},end:{line:23,column:25}},loc:{start:{line:23,column:28},end:{line:28,column:2}},line:23},"2":{name:"createDIObjectFunctionConstructor",decl:{start:{line:37,column:16},end:{line:37,column:49}},loc:{start:{line:37,column:69},end:{line:39,column:1}},line:37},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:8},end:{line:38,column:9}},loc:{start:{line:38,column:14},end:{line:38,column:48}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:66,column:1},end:{line:66,column:2}},loc:{start:{line:66,column:102},end:{line:77,column:2}},line:66}},branchMap:{"0":{loc:{start:{line:24,column:2},end:{line:26,column:3}},type:"if",locations:[{start:{line:24,column:2},end:{line:26,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:24},"1":{loc:{start:{line:49,column:2},end:{line:51,column:3}},type:"if",locations:[{start:{line:49,column:2},end:{line:51,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:49},"2":{loc:{start:{line:52,column:2},end:{line:54,column:3}},type:"if",locations:[{start:{line:52,column:2},end:{line:54,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:52},"3":{loc:{start:{line:66,column:24},end:{line:66,column:35}},type:"default-arg",locations:[{start:{line:66,column:33},end:{line:66,column:35}}],line:66},"4":{loc:{start:{line:66,column:37},end:{line:66,column:46}},type:"default-arg",locations:[{start:{line:66,column:44},end:{line:66,column:46}}],line:66},"5":{loc:{start:{line:66,column:48},end:{line:66,column:61}},type:"default-arg",locations:[{start:{line:66,column:57},end:{line:66,column:61}}],line:66},"6":{loc:{start:{line:66,column:63},end:{line:66,column:100}},type:"default-arg",locations:[{start:{line:66,column:76},end:{line:66,column:100}}],line:66},"7":{loc:{start:{line:67,column:2},end:{line:69,column:3}},type:"if",locations:[{start:{line:67,column:2},end:{line:69,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:67},"8":{loc:{start:{line:70,column:2},end:{line:75,column:3}},type:"if",locations:[{start:{line:70,column:2},end:{line:75,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:70}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0],"4":[0],"5":[0],"6":[0],"7":[0,0],"8":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"86d4963c943546af957335c916d984a339c4d889"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1lg2rx1bl7=function(){return actualCoverage;};}return actualCoverage;}cov_1lg2rx1bl7();import ContextContainer from"./ContextContainer.js";// need to be before import of AbstractContextContainerFactory (why so?)
import AbstractContextContainerFactory from"./AbstractContextContainerFactory.js";import generateRandomString from"../utils/generateRandomString.js";import InvalidContextContainerNameType from"../errors/InvalidContextContainerNameType.js";import NotUniqueContextContainerName from"../errors/NotUniqueContextContainerName.js";import DIObjectKeyFactory from"./helpers/DIObjectKeyFactory.js";// eslint-disable-next-line no-unused-vars
import{DIObjectConfig}from"../DIObjectConfig.js";// import { parseType } from "../../ReflectionJs/index.js";
/**
 * @template T
 * @typedef {T extends abstract new (...args: any[]) => infer P ? P : T extends Function ? FunctionWrapper<T> : any} GetInstanceReturnType<T>
 */ /**
 * @template {Function} T
 * @param {T} diObjectType
 * @param {ContextContainer} ctx
 * @returns {GetInstanceReturnType<T>}
 */export function createDIObjectClassConstructor(diObjectType,ctx){cov_1lg2rx1bl7().f[0]++;cov_1lg2rx1bl7().s[0]++;return function DIObject(){cov_1lg2rx1bl7().f[1]++;cov_1lg2rx1bl7().s[1]++;if(new.target){cov_1lg2rx1bl7().b[0][0]++;cov_1lg2rx1bl7().s[2]++;return ctx.getInstance(diObjectType);}else{cov_1lg2rx1bl7().b[0][1]++;}cov_1lg2rx1bl7().s[3]++;return new DIObject();};}/**
 * @template {Function} T
 * @param {T} diObjectType
 * @param {ContextContainer} ctx
 * @returns {GetInstanceReturnType<T>}
 */export function createDIObjectFunctionConstructor(diObjectType,ctx){cov_1lg2rx1bl7().f[2]++;cov_1lg2rx1bl7().s[4]++;return()=>{cov_1lg2rx1bl7().f[3]++;cov_1lg2rx1bl7().s[5]++;return ctx.getInstance(diObjectType).call;};}/** Class for creation of ContextContainer - ContextContainerFactory.
 *
 * @class
 * @extends AbstractContextContainerFactory
 */class ContextContainerFactory extends AbstractContextContainerFactory{static#names=(cov_1lg2rx1bl7().s[6]++,new Set());static#addName(name){cov_1lg2rx1bl7().s[7]++;if(typeof name!=="string"){cov_1lg2rx1bl7().b[1][0]++;cov_1lg2rx1bl7().s[8]++;throw new InvalidContextContainerNameType();}else{cov_1lg2rx1bl7().b[1][1]++;}cov_1lg2rx1bl7().s[9]++;if(ContextContainerFactory.#names.has(name)){cov_1lg2rx1bl7().b[2][0]++;cov_1lg2rx1bl7().s[10]++;throw new NotUniqueContextContainerName(name);}else{cov_1lg2rx1bl7().b[2][1]++;}cov_1lg2rx1bl7().s[11]++;ContextContainerFactory.#names.add(name);}/** Returns new ContextContainer.
	 * @static
	 * @param {DIObjectConfig[]} [config=[]] - list of di objects configs
	 * @param {string} [name=""] - name of context
	 * @param {ContextContainer} [parent=null] - parent context
	 * @param {DIObjectKeyFactory} [keyFactory=new DIObjectKeyFactory()] - Keys Factory
	 * @returns {ContextContainer}
	 */static createContainer(config=(cov_1lg2rx1bl7().b[3][0]++,[]),name=(cov_1lg2rx1bl7().b[4][0]++,""),parent=(cov_1lg2rx1bl7().b[5][0]++,null),keyFactory=(cov_1lg2rx1bl7().b[6][0]++,new DIObjectKeyFactory())){cov_1lg2rx1bl7().f[4]++;cov_1lg2rx1bl7().s[12]++;if(name===""){cov_1lg2rx1bl7().b[7][0]++;cov_1lg2rx1bl7().s[13]++;name=generateRandomString(7);}else{cov_1lg2rx1bl7().b[7][1]++;}cov_1lg2rx1bl7().s[14]++;if(super.validateContainerParams(config,name,parent,keyFactory)){cov_1lg2rx1bl7().b[8][0]++;const context=(cov_1lg2rx1bl7().s[15]++,new ContextContainer(config,name,parent,keyFactory));cov_1lg2rx1bl7().s[16]++;context.setParent(parent);cov_1lg2rx1bl7().s[17]++;ContextContainerFactory.#addName(name);cov_1lg2rx1bl7().s[18]++;return context;}else{cov_1lg2rx1bl7().b[8][1]++;}cov_1lg2rx1bl7().s[19]++;return null;}}export default ContextContainerFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,