function cov_1fhmqjem7z(){var path="D:\\Programming\\xyz\\dizy\\src\\containers\\ContextContainer.js";var hash="b1975756b08be36bb673a97cb99bcc70a7beea14";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\containers\\ContextContainer.js",statementMap:{"0":{start:{line:26,column:2},end:{line:26,column:42}},"1":{start:{line:39,column:22},end:{line:39,column:114}},"2":{start:{line:39,column:62},end:{line:39,column:84}},"3":{start:{line:39,column:101},end:{line:39,column:112}},"4":{start:{line:40,column:2},end:{line:54,column:5}},"5":{start:{line:41,column:3},end:{line:53,column:4}},"6":{start:{line:43,column:5},end:{line:43,column:117}},"7":{start:{line:44,column:5},end:{line:44,column:11}},"8":{start:{line:46,column:5},end:{line:46,column:123}},"9":{start:{line:47,column:5},end:{line:47,column:11}},"10":{start:{line:49,column:5},end:{line:49,column:117}},"11":{start:{line:50,column:5},end:{line:50,column:11}},"12":{start:{line:52,column:5},end:{line:52,column:11}},"13":{start:{line:61,column:2},end:{line:65,column:5}},"14":{start:{line:62,column:3},end:{line:64,column:4}},"15":{start:{line:63,column:4},end:{line:63,column:17}},"16":{start:{line:74,column:15},end:{line:74,column:48}},"17":{start:{line:75,column:2},end:{line:92,column:3}},"18":{start:{line:76,column:3},end:{line:88,column:4}},"19":{start:{line:78,column:5},end:{line:78,column:85}},"20":{start:{line:79,column:5},end:{line:79,column:11}},"21":{start:{line:81,column:5},end:{line:81,column:88}},"22":{start:{line:82,column:5},end:{line:82,column:11}},"23":{start:{line:84,column:5},end:{line:84,column:84}},"24":{start:{line:85,column:5},end:{line:85,column:11}},"25":{start:{line:87,column:5},end:{line:87,column:11}},"26":{start:{line:90,column:17},end:{line:90,column:60}},"27":{start:{line:91,column:3},end:{line:91,column:27}},"28":{start:{line:93,column:2},end:{line:93,column:14}},"29":{start:{line:102,column:20},end:{line:102,column:45}},"30":{start:{line:103,column:2},end:{line:103,column:33}},"31":{start:{line:112,column:20},end:{line:112,column:45}},"32":{start:{line:113,column:2},end:{line:113,column:44}},"33":{start:{line:113,column:31},end:{line:113,column:44}},"34":{start:{line:114,column:16},end:{line:114,column:62}},"35":{start:{line:115,column:2},end:{line:115,column:79}},"36":{start:{line:115,column:66},end:{line:115,column:79}},"37":{start:{line:116,column:2},end:{line:116,column:51}},"38":{start:{line:133,column:16},end:{line:133,column:54}},"39":{start:{line:134,column:2},end:{line:137,column:3}},"40":{start:{line:135,column:3},end:{line:135,column:41}},"41":{start:{line:135,column:24},end:{line:135,column:41}},"42":{start:{line:136,column:3},end:{line:136,column:52}},"43":{start:{line:138,column:14},end:{line:138,column:32}},"44":{start:{line:139,column:16},end:{line:139,column:58}},"45":{start:{line:140,column:2},end:{line:143,column:3}},"46":{start:{line:141,column:3},end:{line:141,column:41}},"47":{start:{line:141,column:24},end:{line:141,column:41}},"48":{start:{line:142,column:3},end:{line:142,column:52}},"49":{start:{line:144,column:2},end:{line:144,column:73}},"50":{start:{line:144,column:40},end:{line:144,column:73}},"51":{start:{line:145,column:2},end:{line:145,column:120}},"52":{start:{line:156,column:16},end:{line:156,column:41}},"53":{start:{line:157,column:2},end:{line:159,column:3}},"54":{start:{line:158,column:3},end:{line:158,column:60}},"55":{start:{line:160,column:2},end:{line:160,column:38}},"56":{start:{line:170,column:2},end:{line:172,column:3}},"57":{start:{line:170,column:83},end:{line:170,column:100}},"58":{start:{line:171,column:3},end:{line:171,column:15}},"59":{start:{line:173,column:2},end:{line:173,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:1},end:{line:25,column:2}},loc:{start:{line:25,column:91},end:{line:29,column:2}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:37,column:1},end:{line:37,column:2}},loc:{start:{line:37,column:17},end:{line:55,column:2}},line:37},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:53},end:{line:39,column:54}},loc:{start:{line:39,column:62},end:{line:39,column:84}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:91},end:{line:39,column:92}},loc:{start:{line:39,column:101},end:{line:39,column:112}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:22},end:{line:40,column:23}},loc:{start:{line:40,column:37},end:{line:54,column:3}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:60,column:1},end:{line:60,column:2}},loc:{start:{line:60,column:15},end:{line:66,column:2}},line:60},"6":{name:"(anonymous_6)",decl:{start:{line:61,column:22},end:{line:61,column:23}},loc:{start:{line:61,column:33},end:{line:65,column:3}},line:61},"7":{name:"(anonymous_7)",decl:{start:{line:73,column:1},end:{line:73,column:2}},loc:{start:{line:73,column:29},end:{line:94,column:2}},line:73},"8":{name:"(anonymous_8)",decl:{start:{line:101,column:1},end:{line:101,column:2}},loc:{start:{line:101,column:19},end:{line:104,column:2}},line:101},"9":{name:"(anonymous_9)",decl:{start:{line:111,column:1},end:{line:111,column:2}},loc:{start:{line:111,column:19},end:{line:117,column:2}},line:111},"10":{name:"(anonymous_10)",decl:{start:{line:132,column:1},end:{line:132,column:2}},loc:{start:{line:132,column:49},end:{line:146,column:2}},line:132},"11":{name:"(anonymous_11)",decl:{start:{line:154,column:1},end:{line:154,column:2}},loc:{start:{line:154,column:23},end:{line:161,column:2}},line:154},"12":{name:"(anonymous_12)",decl:{start:{line:169,column:1},end:{line:169,column:2}},loc:{start:{line:169,column:23},end:{line:174,column:2}},line:169},"13":{name:"(anonymous_13)",decl:{start:{line:170,column:76},end:{line:170,column:77}},loc:{start:{line:170,column:83},end:{line:170,column:100}},line:170}},branchMap:{"0":{loc:{start:{line:25,column:13},end:{line:25,column:24}},type:"default-arg",locations:[{start:{line:25,column:22},end:{line:25,column:24}}],line:25},"1":{loc:{start:{line:25,column:26},end:{line:25,column:35}},type:"default-arg",locations:[{start:{line:25,column:33},end:{line:25,column:35}}],line:25},"2":{loc:{start:{line:25,column:37},end:{line:25,column:50}},type:"default-arg",locations:[{start:{line:25,column:46},end:{line:25,column:50}}],line:25},"3":{loc:{start:{line:25,column:52},end:{line:25,column:89}},type:"default-arg",locations:[{start:{line:25,column:65},end:{line:25,column:89}}],line:25},"4":{loc:{start:{line:41,column:3},end:{line:53,column:4}},type:"switch",locations:[{start:{line:42,column:4},end:{line:44,column:11}},{start:{line:45,column:4},end:{line:47,column:11}},{start:{line:48,column:4},end:{line:50,column:11}},{start:{line:51,column:4},end:{line:52,column:11}}],line:41},"5":{loc:{start:{line:62,column:3},end:{line:64,column:4}},type:"if",locations:[{start:{line:62,column:3},end:{line:64,column:4}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:62},"6":{loc:{start:{line:75,column:2},end:{line:92,column:3}},type:"if",locations:[{start:{line:75,column:2},end:{line:92,column:3}},{start:{line:89,column:9},end:{line:92,column:3}}],line:75},"7":{loc:{start:{line:76,column:3},end:{line:88,column:4}},type:"switch",locations:[{start:{line:77,column:4},end:{line:79,column:11}},{start:{line:80,column:4},end:{line:82,column:11}},{start:{line:83,column:4},end:{line:85,column:11}},{start:{line:86,column:4},end:{line:87,column:11}}],line:76},"8":{loc:{start:{line:113,column:2},end:{line:113,column:44}},type:"if",locations:[{start:{line:113,column:2},end:{line:113,column:44}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:113},"9":{loc:{start:{line:115,column:2},end:{line:115,column:79}},type:"if",locations:[{start:{line:115,column:2},end:{line:115,column:79}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:115},"10":{loc:{start:{line:134,column:2},end:{line:137,column:3}},type:"if",locations:[{start:{line:134,column:2},end:{line:137,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:134},"11":{loc:{start:{line:135,column:3},end:{line:135,column:41}},type:"if",locations:[{start:{line:135,column:3},end:{line:135,column:41}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:135},"12":{loc:{start:{line:140,column:2},end:{line:143,column:3}},type:"if",locations:[{start:{line:140,column:2},end:{line:143,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:140},"13":{loc:{start:{line:141,column:3},end:{line:141,column:41}},type:"if",locations:[{start:{line:141,column:3},end:{line:141,column:41}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:141},"14":{loc:{start:{line:144,column:2},end:{line:144,column:73}},type:"if",locations:[{start:{line:144,column:2},end:{line:144,column:73}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:144},"15":{loc:{start:{line:145,column:9},end:{line:145,column:119}},type:"cond-expr",locations:[{start:{line:145,column:27},end:{line:145,column:49}},{start:{line:145,column:52},end:{line:145,column:119}}],line:145},"16":{loc:{start:{line:145,column:52},end:{line:145,column:119}},type:"binary-expr",locations:[{start:{line:145,column:52},end:{line:145,column:74}},{start:{line:145,column:78},end:{line:145,column:119}}],line:145},"17":{loc:{start:{line:157,column:2},end:{line:159,column:3}},type:"if",locations:[{start:{line:157,column:2},end:{line:159,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:157},"18":{loc:{start:{line:170,column:2},end:{line:172,column:3}},type:"if",locations:[{start:{line:170,column:2},end:{line:172,column:3}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:170},"19":{loc:{start:{line:170,column:6},end:{line:170,column:101}},type:"binary-expr",locations:[{start:{line:170,column:6},end:{line:170,column:37}},{start:{line:170,column:41},end:{line:170,column:101}}],line:170}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b1975756b08be36bb673a97cb99bcc70a7beea14"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1fhmqjem7z=function(){return actualCoverage;};}return actualCoverage;}cov_1fhmqjem7z();import AbstractContextContainer from"./AbstractContextContainer.js";import DIObjectKeyFactory from"./helpers/DIObjectKeyFactory.js";import SessionContainer from"./SessionContainer.js";import SingletoneContainer from"./SingletoneContainer.js";import DemandedFactory from"./DemandedFactory.js";import LifecycleEnum from"../constants/LifecycleEnum.js";// eslint-disable-next-line no-unused-vars
import{DemandedConfig,DIObjectConfig,SessionConfig,SingletoneConfig}from"../DIObjectConfig.js";// eslint-disable-next-line no-unused-vars
import FunctionWrapper from"../wrappers/FunctionWrapper.js";/** Class for context - ContextContainer.
 * It takes config and generates dependency trees, validates it, creates scopes and allow to get instances
 * @class
 * @extends AbstractContextContainer
 */class ContextContainer extends AbstractContextContainer{/**
	 *
	 * @param {DIObjectConfig[]} [config=[]]
	 * @param {string} [name=""]
	 * @param {ContextContainer} [parent=null]
	 * @param {DIObjectKeyFactory} [keyFactory=new DIObjectKeyFactory()]
	 */constructor(config=(cov_1fhmqjem7z().b[0][0]++,[]),name=(cov_1fhmqjem7z().b[1][0]++,""),parent=(cov_1fhmqjem7z().b[2][0]++,null),keyFactory=(cov_1fhmqjem7z().b[3][0]++,new DIObjectKeyFactory())){cov_1fhmqjem7z().f[0]++;cov_1fhmqjem7z().s[0]++;super(config,name,parent,keyFactory);// this.#parent = parent;
// this.#keyFactory = keyFactory;
}// #parent;
// #keyFactory;
/** Creates all needed scopes for this context by lifecycles.
	 * @protected
	 */_createScopes(){cov_1fhmqjem7z().f[1]++;// sort scopes initialization order by desc of lifecycle id (order: Demanded -> Singletone -> Session -> Persistent)
const scopesTypes=(cov_1fhmqjem7z().s[1]++,new Set(this.classTreeList.map(cls=>{cov_1fhmqjem7z().f[2]++;cov_1fhmqjem7z().s[2]++;return cls.baseNode.lifecycle;}).sort((a,b)=>{cov_1fhmqjem7z().f[3]++;cov_1fhmqjem7z().s[3]++;return b.id-a.id;})));cov_1fhmqjem7z().s[4]++;scopesTypes.forEach(lifecycle=>{cov_1fhmqjem7z().f[4]++;cov_1fhmqjem7z().s[5]++;switch(lifecycle.id){case LifecycleEnum.Session:cov_1fhmqjem7z().b[4][0]++;cov_1fhmqjem7z().s[6]++;this.scopes.set(lifecycle.id,new SessionContainer(this,this.filterClassesByLifecycle(LifecycleEnum.Session)));cov_1fhmqjem7z().s[7]++;break;case LifecycleEnum.Singletone:cov_1fhmqjem7z().b[4][1]++;cov_1fhmqjem7z().s[8]++;this.scopes.set(lifecycle.id,new SingletoneContainer(this,this.filterClassesByLifecycle(LifecycleEnum.Singletone)));cov_1fhmqjem7z().s[9]++;break;case LifecycleEnum.Demanded:cov_1fhmqjem7z().b[4][2]++;cov_1fhmqjem7z().s[10]++;this.scopes.set(lifecycle.id,new DemandedFactory(this,this.filterClassesByLifecycle(LifecycleEnum.Demanded)));cov_1fhmqjem7z().s[11]++;break;default:cov_1fhmqjem7z().b[4][3]++;cov_1fhmqjem7z().s[12]++;break;}});}/** Calls each scope init method if it exists.
	 * @protected
	 */_initScopes(){cov_1fhmqjem7z().f[5]++;cov_1fhmqjem7z().s[13]++;this.scopes.forEach(scope=>{cov_1fhmqjem7z().f[6]++;cov_1fhmqjem7z().s[14]++;if(scope.init){cov_1fhmqjem7z().b[5][0]++;cov_1fhmqjem7z().s[15]++;scope.init();}else{cov_1fhmqjem7z().b[5][1]++;}});}/** Add DI Object to this context
	 * @public
	 * @param {SingletoneConfig|SessionConfig|DemandedConfig} diObjectConfig - config of new di object
	 * @returns {boolean}
	 */addDIObject(diObjectConfig){cov_1fhmqjem7z().f[7]++;const tree=(cov_1fhmqjem7z().s[16]++,super.addDIObject(diObjectConfig));cov_1fhmqjem7z().s[17]++;if(!this.scopes.has(tree.baseNode.lifecycle.id)){cov_1fhmqjem7z().b[6][0]++;cov_1fhmqjem7z().s[18]++;switch(tree.baseNode.lifecycle.id){case LifecycleEnum.Session:cov_1fhmqjem7z().b[7][0]++;cov_1fhmqjem7z().s[19]++;this.scopes.set(tree.baseNode.lifecycle.id,new SessionContainer(this,[tree]));cov_1fhmqjem7z().s[20]++;break;case LifecycleEnum.Singletone:cov_1fhmqjem7z().b[7][1]++;cov_1fhmqjem7z().s[21]++;this.scopes.set(tree.baseNode.lifecycle.id,new SingletoneContainer(this,[tree]));cov_1fhmqjem7z().s[22]++;break;case LifecycleEnum.Demanded:cov_1fhmqjem7z().b[7][2]++;cov_1fhmqjem7z().s[23]++;this.scopes.set(tree.baseNode.lifecycle.id,new DemandedFactory(this,[tree]));cov_1fhmqjem7z().s[24]++;break;default:cov_1fhmqjem7z().b[7][3]++;cov_1fhmqjem7z().s[25]++;break;}}else{cov_1fhmqjem7z().b[6][1]++;const scope=(cov_1fhmqjem7z().s[26]++,this.scopes.get(tree.baseNode.lifecycle.id));cov_1fhmqjem7z().s[27]++;scope.addDIObject(tree);}cov_1fhmqjem7z().s[28]++;return true;}/** Returns `true` if context has di object with specified name.
	 * @public
	 * @param {string|symbol|Function} name - name of di object from this context
	 * @returns {boolean}
	 */hasDIObject(name){cov_1fhmqjem7z().f[8]++;const classTree=(cov_1fhmqjem7z().s[29]++,this._findClassTree(name));cov_1fhmqjem7z().s[30]++;return classTree!==undefined;}/** Returns `true` if context has an instance of di object with specified name.
	 * @public
	 * @param {string|symbol|Function} name - name of di object from this context
	 * @returns {boolean}
	 */hasInstance(name){cov_1fhmqjem7z().f[9]++;const classTree=(cov_1fhmqjem7z().s[31]++,this._findClassTree(name));cov_1fhmqjem7z().s[32]++;if(classTree===undefined){cov_1fhmqjem7z().b[8][0]++;cov_1fhmqjem7z().s[33]++;return false;}else{cov_1fhmqjem7z().b[8][1]++;}const scope=(cov_1fhmqjem7z().s[34]++,this.getScope(classTree.baseNode.lifecycle.id));cov_1fhmqjem7z().s[35]++;if(classTree.baseNode.lifecycle.id===LifecycleEnum.Demanded){cov_1fhmqjem7z().b[9][0]++;cov_1fhmqjem7z().s[36]++;return false;}else{cov_1fhmqjem7z().b[9][1]++;}cov_1fhmqjem7z().s[37]++;return scope.hasInstance(classTree.baseNode.key);}/**
	 * @template T
	 * @typedef {T extends abstract new (...args: any[]) => infer P ? P : T extends Function ? FunctionWrapper<T> : any} GetInstanceReturnType<T>
	 */ /** Get an instance of di object with specified name and lifecycleId.
	 * @public
	 * @template {string | symbol | Function} T
	 * @param {T} name - name of di object from this context
	 * @param {number} [lifecycleId] - id of Lifecycle
	 * @param {boolean} [calledFromScope] - true only if this method is called from scope
	 * @returns {GetInstanceReturnType<T>}
	 */getInstance(name,lifecycleId,calledFromScope){cov_1fhmqjem7z().f[10]++;const clazz=(cov_1fhmqjem7z().s[38]++,this._findClassTree(name,lifecycleId));cov_1fhmqjem7z().s[39]++;if(clazz===undefined){cov_1fhmqjem7z().b[10][0]++;cov_1fhmqjem7z().s[40]++;if(calledFromScope){cov_1fhmqjem7z().b[11][0]++;cov_1fhmqjem7z().s[41]++;return undefined;}else{cov_1fhmqjem7z().b[11][1]++;}cov_1fhmqjem7z().s[42]++;return this._getChildInstance(name,lifecycleId);}else{cov_1fhmqjem7z().b[10][1]++;}const key=(cov_1fhmqjem7z().s[43]++,clazz.baseNode.key);const scope=(cov_1fhmqjem7z().s[44]++,this.getScope(clazz.baseNode.lifecycle.id));cov_1fhmqjem7z().s[45]++;if(!scope){cov_1fhmqjem7z().b[12][0]++;cov_1fhmqjem7z().s[46]++;if(calledFromScope){cov_1fhmqjem7z().b[13][0]++;cov_1fhmqjem7z().s[47]++;return undefined;}else{cov_1fhmqjem7z().b[13][1]++;}cov_1fhmqjem7z().s[48]++;return this._getChildInstance(name,lifecycleId);}else{cov_1fhmqjem7z().b[12][1]++;}cov_1fhmqjem7z().s[49]++;if(scope instanceof DemandedFactory){cov_1fhmqjem7z().b[14][0]++;cov_1fhmqjem7z().s[50]++;return scope.createInstance(key);}else{cov_1fhmqjem7z().b[14][1]++;}cov_1fhmqjem7z().s[51]++;return calledFromScope?(cov_1fhmqjem7z().b[15][0]++,scope.getInstance(key)):(cov_1fhmqjem7z().b[15][1]++,(cov_1fhmqjem7z().b[16][0]++,scope.getInstance(key))??(cov_1fhmqjem7z().b[16][1]++,this._getChildInstance(name,lifecycleId)));}/** Returns `true` if type of di object with specified key is the same as 'type' argument.
	 * @public
	 * @param {string|symbol} key - 'key' of di object
	 * @param {any} type - type of di object
	 * @returns {boolean}
	 */typeMatch(name,type){cov_1fhmqjem7z().f[11]++;// is DI object with name instance of type
const clazz=(cov_1fhmqjem7z().s[52]++,this._findClassTree(name));cov_1fhmqjem7z().s[53]++;if(clazz===undefined){cov_1fhmqjem7z().b[17][0]++;cov_1fhmqjem7z().s[54]++;throw new Error("There is no di object with this name.");}else{cov_1fhmqjem7z().b[17][1]++;}cov_1fhmqjem7z().s[55]++;return clazz.baseNode.type===type;}/** Get scope by lifecycle id.
	 * @public
	 * @param {number} lifecycleId - id of Lifecycle
	 * @returns {SingletoneContainer|SessionContainer|DemandedFactory}
	 */ // eslint-disable-next-line no-unused-vars
getScope(lifecycleId){cov_1fhmqjem7z().f[12]++;cov_1fhmqjem7z().s[56]++;if((cov_1fhmqjem7z().b[19][0]++,typeof lifecycleId!=="number")||(cov_1fhmqjem7z().b[19][1]++,!Object.values(LifecycleEnum).find(v=>{cov_1fhmqjem7z().f[13]++;cov_1fhmqjem7z().s[57]++;return v===lifecycleId;}))){cov_1fhmqjem7z().b[18][0]++;cov_1fhmqjem7z().s[58]++;return null;}else{cov_1fhmqjem7z().b[18][1]++;}cov_1fhmqjem7z().s[59]++;return this.scopes.get(lifecycleId);}}export default ContextContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,