function cov_e72kgc6nt(){var path="D:\\Programming\\xyz\\dizy\\src\\test\\DependencyTree.test.js";var hash="91ae8406aaa966a63ec5caa4c808d8ff07e39835";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Programming\\xyz\\dizy\\src\\test\\DependencyTree.test.js",statementMap:{"0":{start:{line:5,column:0},end:{line:71,column:3}},"1":{start:{line:6,column:1},end:{line:24,column:4}},"2":{start:{line:7,column:2},end:{line:14,column:5}},"3":{start:{line:8,column:27},end:{line:8,column:53}},"4":{start:{line:8,column:33},end:{line:8,column:53}},"5":{start:{line:9,column:3},end:{line:13,column:5}},"6":{start:{line:16,column:2},end:{line:23,column:5}},"7":{start:{line:17,column:27},end:{line:17,column:83}},"8":{start:{line:17,column:33},end:{line:17,column:83}},"9":{start:{line:18,column:3},end:{line:22,column:5}},"10":{start:{line:26,column:1},end:{line:53,column:4}},"11":{start:{line:27,column:2},end:{line:35,column:5}},"12":{start:{line:28,column:21},end:{line:28,column:71}},"13":{start:{line:29,column:27},end:{line:29,column:60}},"14":{start:{line:29,column:33},end:{line:29,column:60}},"15":{start:{line:30,column:3},end:{line:34,column:5}},"16":{start:{line:37,column:2},end:{line:45,column:5}},"17":{start:{line:38,column:21},end:{line:38,column:71}},"18":{start:{line:39,column:27},end:{line:39,column:62}},"19":{start:{line:39,column:33},end:{line:39,column:62}},"20":{start:{line:40,column:3},end:{line:44,column:5}},"21":{start:{line:47,column:2},end:{line:52,column:5}},"22":{start:{line:48,column:21},end:{line:48,column:71}},"23":{start:{line:49,column:16},end:{line:49,column:44}},"24":{start:{line:50,column:3},end:{line:50,column:32}},"25":{start:{line:51,column:3},end:{line:51,column:61}},"26":{start:{line:55,column:1},end:{line:70,column:4}},"27":{start:{line:56,column:2},end:{line:69,column:5}},"28":{start:{line:57,column:21},end:{line:57,column:71}},"29":{start:{line:58,column:18},end:{line:58,column:43}},"30":{start:{line:59,column:3},end:{line:68,column:6}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:27},end:{line:5,column:28}},loc:{start:{line:5,column:33},end:{line:71,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:6,column:34},end:{line:6,column:35}},loc:{start:{line:6,column:40},end:{line:24,column:2}},line:6},"2":{name:"(anonymous_2)",decl:{start:{line:7,column:51},end:{line:7,column:52}},loc:{start:{line:7,column:57},end:{line:14,column:3}},line:7},"3":{name:"(anonymous_3)",decl:{start:{line:8,column:27},end:{line:8,column:28}},loc:{start:{line:8,column:33},end:{line:8,column:53}},line:8},"4":{name:"(anonymous_4)",decl:{start:{line:16,column:59},end:{line:16,column:60}},loc:{start:{line:16,column:65},end:{line:23,column:3}},line:16},"5":{name:"(anonymous_5)",decl:{start:{line:17,column:27},end:{line:17,column:28}},loc:{start:{line:17,column:33},end:{line:17,column:83}},line:17},"6":{name:"(anonymous_6)",decl:{start:{line:26,column:46},end:{line:26,column:47}},loc:{start:{line:26,column:52},end:{line:53,column:2}},line:26},"7":{name:"(anonymous_7)",decl:{start:{line:27,column:63},end:{line:27,column:64}},loc:{start:{line:27,column:69},end:{line:35,column:3}},line:27},"8":{name:"(anonymous_8)",decl:{start:{line:29,column:27},end:{line:29,column:28}},loc:{start:{line:29,column:33},end:{line:29,column:60}},line:29},"9":{name:"(anonymous_9)",decl:{start:{line:37,column:48},end:{line:37,column:49}},loc:{start:{line:37,column:54},end:{line:45,column:3}},line:37},"10":{name:"(anonymous_10)",decl:{start:{line:39,column:27},end:{line:39,column:28}},loc:{start:{line:39,column:33},end:{line:39,column:62}},line:39},"11":{name:"(anonymous_11)",decl:{start:{line:47,column:113},end:{line:47,column:114}},loc:{start:{line:47,column:119},end:{line:52,column:3}},line:47},"12":{name:"(anonymous_12)",decl:{start:{line:55,column:44},end:{line:55,column:45}},loc:{start:{line:55,column:50},end:{line:70,column:2}},line:55},"13":{name:"(anonymous_13)",decl:{start:{line:56,column:113},end:{line:56,column:114}},loc:{start:{line:56,column:119},end:{line:69,column:3}},line:56}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"91ae8406aaa966a63ec5caa4c808d8ff07e39835"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_e72kgc6nt=function(){return actualCoverage;};}return actualCoverage;}cov_e72kgc6nt();import{assert}from"chai";import DependencyTree from"../containers/helpers/DependencyTree.js";import DependencyTreeFixture from"./fixtures/DependencyTreeFixture.js";cov_e72kgc6nt().s[0]++;describe("DependencyTree",()=>{cov_e72kgc6nt().f[0]++;cov_e72kgc6nt().s[1]++;describe("new DependencyTree()",()=>{cov_e72kgc6nt().f[1]++;cov_e72kgc6nt().s[2]++;it("create DependencyTree instance with no arg",()=>{cov_e72kgc6nt().f[2]++;cov_e72kgc6nt().s[3]++;const funcThrowsError=()=>{cov_e72kgc6nt().f[3]++;cov_e72kgc6nt().s[4]++;return new DependencyTree();};cov_e72kgc6nt().s[5]++;assert.throws(funcThrowsError,Error,"DependencyTree baseNode arg is invalid. Constructor argument 'baseNode' must be an instance of DependencyTreeNode");});cov_e72kgc6nt().s[6]++;it("create DependencyTree instance with valid baseNode",()=>{cov_e72kgc6nt().f[4]++;cov_e72kgc6nt().s[7]++;const funcThrowsError=()=>{cov_e72kgc6nt().f[5]++;cov_e72kgc6nt().s[8]++;return new DependencyTree(DependencyTreeFixture.baseNode);};cov_e72kgc6nt().s[9]++;assert.doesNotThrow(funcThrowsError,Error,"DependencyTree baseNode arg is invalid. Constructor argument 'baseNode' must be an instance of DependencyTreeNode");});});cov_e72kgc6nt().s[10]++;describe("DependencyTree.getDepsByHeight()",()=>{cov_e72kgc6nt().f[6]++;cov_e72kgc6nt().s[11]++;it("getDepsByHeight() without argument will throw an error",()=>{cov_e72kgc6nt().f[7]++;const classTree=(cov_e72kgc6nt().s[12]++,new DependencyTree(DependencyTreeFixture.baseNode));cov_e72kgc6nt().s[13]++;const funcThrowsError=()=>{cov_e72kgc6nt().f[8]++;cov_e72kgc6nt().s[14]++;return classTree.getDepsByHeight();};cov_e72kgc6nt().s[15]++;assert.throws(funcThrowsError,Error,"getDepsByHeight arg 'height' is undefined. Argument 'height' value must be a positive number");});cov_e72kgc6nt().s[16]++;it("getDepsByHeight(-1) will throw an error",()=>{cov_e72kgc6nt().f[9]++;const classTree=(cov_e72kgc6nt().s[17]++,new DependencyTree(DependencyTreeFixture.baseNode));cov_e72kgc6nt().s[18]++;const funcThrowsError=()=>{cov_e72kgc6nt().f[10]++;cov_e72kgc6nt().s[19]++;return classTree.getDepsByHeight(-1);};cov_e72kgc6nt().s[20]++;assert.throws(funcThrowsError,Error,"getDepsByHeight arg 'height' is a negative number. Argument 'height' value must be a positive number");});cov_e72kgc6nt().s[21]++;it(`getDepsByHeight(0) returns base node (with name = '${DependencyTreeFixture.baseNode.name}') of deps tree`,()=>{cov_e72kgc6nt().f[11]++;const classTree=(cov_e72kgc6nt().s[22]++,new DependencyTree(DependencyTreeFixture.baseNode));const deps=(cov_e72kgc6nt().s[23]++,classTree.getDepsByHeight(0));cov_e72kgc6nt().s[24]++;assert.equal(deps.length,1);cov_e72kgc6nt().s[25]++;assert.deepEqual(deps[0],DependencyTreeFixture.baseNode);});});cov_e72kgc6nt().s[26]++;describe("DependencyTree.groupByHeight()",()=>{cov_e72kgc6nt().f[12]++;cov_e72kgc6nt().s[27]++;it(`getDepsByHeight(0) returns base node (with name = '${DependencyTreeFixture.baseNode.name}') of deps tree`,()=>{cov_e72kgc6nt().f[13]++;const classTree=(cov_e72kgc6nt().s[28]++,new DependencyTree(DependencyTreeFixture.baseNode));const groups=(cov_e72kgc6nt().s[29]++,classTree.groupByHeight());cov_e72kgc6nt().s[30]++;assert.deepEqual(groups,[{height:0,deps:[DependencyTreeFixture.baseNode]},{height:1,deps:[...DependencyTreeFixture.baseNode.deps]}]);});});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,